{"version":3,"sources":["./src/app/theme/auth/auth-routing.module.ts","./src/app/theme/auth/auth.module.ts","./src/app/theme/auth/registration/basic-reg/basic-reg-routing.module.ts","./src/app/theme/auth/registration/basic-reg/basic-reg.component.ts","./src/app/theme/auth/registration/basic-reg/basic-reg.component.html","./src/app/theme/auth/registration/basic-reg/basic-reg.module.ts","./src/app/theme/auth/registration/basic-reg/basic-reg.service.ts","./src/app/theme/auth/registration/registration-routing.module.ts","./src/app/theme/auth/registration/registration.module.ts"],"names":[],"mappings":"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","file":"theme-auth-auth-module.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Authentication',\r\n      status: false\r\n    },\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\r\n      },\r\n      {\r\n        path: 'registration',\r\n        loadChildren: () => import('./registration/registration.module').then(m => m.RegistrationModule)\r\n      },\r\n      {\r\n        path: 'forgot',\r\n        loadChildren: () => import('./forgot/forgot.module').then(m => m.ForgotModule)\r\n      },\r\n      {\r\n        path: 'lock-screen',\r\n        loadChildren: () => import('./lock-screen/lock-screen.module').then(m => m.LockScreenModule)\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {AuthRoutingModule} from './auth-routing.module';\nimport {SharedModule} from '../../shared/shared.module';\nimport{RegistrationModule} from './registration/registration.module'\n@NgModule({\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule,\n    RegistrationModule\n  ],\n  declarations: []\n})\nexport class AuthModule { }\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {BasicRegComponent} from './basic-reg.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BasicRegComponent,\r\n    data: {\r\n      title: 'Simple Registration'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BasicRegRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from \"@angular/forms\";\nimport { NgPasswordValidatorOptions } from \"ng-password-validator\";\n// Displaying Sweet Alert\nimport Swal from \"sweetalert2\";\nimport{BasicRegService} from './basic-reg.service'\n\ninterface Basicreginterface{\n  Type: boolean\n  Full_Name: string,\n  Mobile_No: number,\n  Email_Address: string,\n  College_Code: string,\n  User_Name: string,\n  Create_Password:string,\n  Confirm_Password:string,\n\n}\n\n@Component({\n  selector: 'app-basic-reg',\n  templateUrl: './basic-reg.component.html',\n  styleUrls: ['./basic-reg.component.scss']\n})\nexport class BasicRegComponent implements OnInit {\n  inputValue: string;\n  form: FormGroup;\n  options: NgPasswordValidatorOptions = {\n    placement: \"bottom\",\n    \"animation-duration\": 500\n};\n  select_toggle: boolean = false;\n  // Created Form Group\n  angForm: FormGroup;\n  //password block hide and show\n  hidenshow:boolean = false;\n  toastr: any;\n\n  constructor(private fb: FormBuilder, private _basicreg : BasicRegService) { }\n\n  ngOnInit() {\n    this.formInIt();\n    this.createForm();\n    document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\n    \n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      Type: new FormControl('Student'),\n      Full_Name: [\"\", [Validators.required, Validators.required]],\n      Mobile_No: [\"\"],\n      Email_Address: [\"\"],\n      College_Code: [\"\"],\n      User_Name: [\"\"],\n      Create_Password: [\"\"],\n      Confirm_Password: [\"\"],\n\n    });\n\n  }\n  onInput(event: any): void {\n    this.inputValue = event.target.value;\n}\n\n  \nsubmit() {\n  const formVal = this.angForm.value;\n  const dataToSend = {\n    'Type':formVal.Type,\n    'Full_Name': formVal.Full_Name,\n    'Mobile_No': formVal.Mobile_No,\n    'Email_Address': formVal.Email_Address,\n    'College_Code': formVal.College_Code,\n    'User_Name': formVal.User_Name,\n    'Create_Password':formVal.Create_Password,\n    'Confirm_Password':formVal.Confirm_Password,\n   \n  }\n\n\n  this._basicreg.postData(dataToSend).subscribe(\n    (data) => {\n      Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\n      console.log(\"submit\", data);\n      // this.custData = data1.id;\n      // this.addNewCustomer(data.id);\n      // to reload after insertion of data\n      // this.rerender();\n    },\n    (error) => {\n      console.log(error);\n    }\n  );\n\n  //To clear form\n  this.resetForm();\n}\n // Reset Function\n resetForm() {\n  this.createForm();\n}\n\n  defaultOptions = {\n    placement: \"bottom\",\n    \"z-index\": 0,\n    \"custom-class\": \"custom-class\",\n    shadow: true,\n    theme: \"pro\",\n    offset: 8,\n    heading: \"Password Policy\",\n    successMessage: \"Awesome! Password requirement fulfilled.\",\n    rules: {\n        password: {\n            type: \"range\",\n            length: 8,\n            min: 6,\n            max: 10,\n        },\n        \"include-symbol\": true,\n        \"include-number\": true,\n        \"include-lowercase-characters\": true,\n        \"include-uppercase-characters\": true,\n    }\n};\n  formInIt(): void {\n    this.form = this.fb.group({\n        theme: [\"pro\"],\n        placement: [\"bottom\"],\n        shadow: [true],\n        \"custom-class\": [\"\"],\n        \"z-index\": [\"\"],\n        \"animation-duration\": [\"\"],\n        offset: [\"10\"],\n        width: [\"\"],\n        \"max-width\": [\"\"],\n        top: [\"\"],\n        left: [\"\"],\n        password: [true],\n        \"include-uppercase-characters\": [true],\n        \"include-lowercase-characters\": [true],\n        \"include-symbol\": [true],\n        \"include-number\": [true],\n        type: [\"range\"],\n        length: [\"\"],\n        min: [\"6\"],\n        max: [\"10\"],\n        heading: [\"\"],\n        successMessage: [\"\"],\n    });\n    this.formOnChange();\n  }\n  isValid(event: boolean): void {\n    if (this.inputValue && this.inputValue.length) {\n        if (event) {\n            this.toastr.success(\"Password is Valid.\", \"Successful!\");\n        } else {\n            this.toastr.error(\"Password is invalid.\", \"Error!\");\n        }\n    }\n\n}\n\n  formOnChange(): void {\n    this.form.valueChanges.subscribe((value: any) => {\n        this.options[\"rules\"] = {\n            \"include-lowercase-characters\": value[\"include-lowercase-characters\"],\n            \"include-uppercase-characters\": value[\"include-uppercase-characters\"],\n            \"include-symbol\": value[\"include-symbol\"],\n            \"include-number\": value[\"include-number\"],\n            password: value.password ? {\n                type: value.type,\n                length: value.length,\n                min: value.min,\n                max: value.max,\n            } : false\n        };\n\n        this.updateOptions({ ...value });\n\n    });\n\n    this.form.get(\"type\").valueChanges.subscribe((type: string) => {\n        switch (type) {\n            case \"range\":\n                this.form.patchValue({\n                    length: \"\",\n                    min: \"6\",\n                    max: \"10\",\n                });\n                break;\n            case \"number\":\n                this.form.patchValue({\n                    length: \"8\",\n                    min: \"\",\n                    max: \"\",\n                });\n        }\n\n    });\n\n    this.form.get(\"top\").valueChanges.subscribe((top: string) => {\n        this.options[\"position\"] = {\n            top: +top,\n            left: this.form.get(\"left\").value ? +this.form.get(\"left\").value : 0\n        };\n    });\n\n    this.form.get(\"left\").valueChanges.subscribe((left: string) => {\n        this.options[\"position\"] = {\n            left: +left,\n            top: this.form.get(\"top\").value ? +this.form.get(\"top\").value : 0\n        };\n    });\n}\nupdateOptions(value: any): void {\n  delete value.top;\n  delete value.left;\n  delete value[\"include-uppercase-characters\"];\n  delete value[\"include-lowercase-characters\"];\n  delete value[\"include-symbol\"];\n  delete value[\"include-number\"];\n  delete value.password;\n  delete value.type;\n  delete value.length;\n  delete value.min;\n  delete value.max;\n\n  this.options = { ...this.options, ...value };\n  this.applyDefault(this.options);\n\n}\napplyDefault(obj) {\n  for (let propName in obj) {\n      if (obj[propName] === \"\") {\n          this.options[propName] = this.defaultOptions[propName];\n      }\n  }\n}\n \n  \n  //toggle select college code\n  select() {\n    this.select_toggle = !this.select_toggle;\n  }\n  selectanybody() {\n    this.select_toggle = false;\n  }\n  selectstudent() {\n    this.select_toggle = false;\n  }\n\n//function to confirm password\ncheckPassword() {\n let  password1 = ((document.getElementById(\"Create_Password\") as HTMLInputElement).value);\n let password2 = ((document.getElementById(\"Confirm_Password\") as HTMLInputElement).value);\n\n  // If password not entered\n  if (password1 == ''){\n    Swal.fire(\"Warning!\", \"Please enter Password !\", \"warning\");\n\n  }\n\n        \n  // If confirm password not entered\n  else if (password2 == ''){\n    Swal.fire(\"Warning!\", \"Please enter confirm password!\", \"warning\");\n\n  }\n      // alert (\"Please enter confirm password\");\n        \n  // If Not same return False.    \n  else if (password1 != password2) {\n    Swal.fire(\"Warning!\", \"Password did not match: Please try again...!\", \"warning\");      \n  }\n\n  // If same return True.\n  // else{\n  //   Swal.fire(\"Success!\", \"Password Match!\", \"success\");\n\n  //     // alert(\"Password Match: Welcome to GeeksforGeeks!\")\n      \n  // }\n}\n\n}\n","<section class=\"login-block\">\r\n  <!-- Container-fluid starts -->\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <form action=\"javascript:\" [formGroup]=\"angForm\">\r\n          <div class=\"row mt-3\">\r\n            <div class=\"col-sm-5\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body \">\r\n                  <img src=\"assets/images/SUK-Name.gif\" class=\"imagesize\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-5\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body card_padding\">\r\n\r\n                  <div class=\"row m-b-6\">\r\n                    <div class=\"col-md-12\">\r\n                      <h4 class=\"text-center\">Registration Form</h4>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"card-block \">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm \">\r\n                        <div class=\"form-radio\">\r\n                          <h6>Select Your Registration Type</h6>\r\n                          <div class=\"radio radio-inline\">\r\n                            <label>\r\n                              <input type=\"radio\" value=\"Student\" name=\"Type\" formControlName=\"Type\" [checked]=\"true\"\r\n                                (click)=\"selectstudent()\">\r\n                              <i class=\"helper\"></i>Student<span class=\"required\"> </span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio radio-inline\">\r\n                            <label>\r\n                              <input type=\"radio\" value=\"College\" formControlName=\"Type\" name=\"Type\" (click)=\"select()\">\r\n                              <i class=\"helper\"></i>College<span class=\"required\"> </span>\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"radio radio-inline\">\r\n                            <label>\r\n                              <input type=\"radio\" value=\"Anybody\" name=\"Type\" formControlName=\"Type\"\r\n                                (click)=\"selectanybody()\">\r\n                              <i class=\"helper\"></i>Anybody<span class=\"required\"> </span>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"text\" name=\"FullName\" class=\"form-control\" placeholder=\" \" id=\"Full_Name\"\r\n                              pattern=\"^[A-Za-z\\s]+$\" formControlName=\"Full_Name\" required>\r\n                            <label for=\"Full_Name\">Full Name<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['Full_Name'].invalid && (angForm.controls['Full_Name'].dirty || angForm.controls['Full_Name'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['Full_Name'].errors?.pattern || angForm.controls['Full_Name'].errors?.required\">\r\n                            This field is required and Input allowed only A-Z\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"text\" name=\"Mobile_No\" class=\"form-control\" placeholder=\" \" id=\"Mobile_No\"\r\n                              pattern=\"[7-9 0]{1}[0-9]{9}\" maxlength=\"10\" minlength=\"10\" formControlName=\"Mobile_No\" required>\r\n                            <label for=\"Mobile_No\">Mobile No.<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['Mobile_No'].invalid && (angForm.controls['Mobile_No'].dirty || angForm.controls['Mobile_No'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['Mobile_No'].errors?.pattern || angForm.controls['Mobile_No'].errors?.maxlength || angForm.controls['Mobile_No'].errors?.minlength || angForm.controls['Mobile_No'].errors?.required\">\r\n                            Input allowed only 0-9 and It starts by either for 7 or 8 or 9,\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"text\" name=\"Email_Address\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.com$\"\r\n                              class=\"form-control\" placeholder=\" \" minlength=\"11\" id=\"Email_Address\" formControlName=\"Email_Address\" required>\r\n                            <label for=\"Email_Address\">Email<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['Email_Address'].invalid && (angForm.controls['Email_Address'].dirty || angForm.controls['Email_Address'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['Email_Address'].errors?.pattern || angForm.controls['Email_Address'].errors?.maxlength || angForm.controls['Email_Address'].errors?.minlength || angForm.controls['Email_Address'].errors?.required\">\r\n                            Please Enter Valid Email Address\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row \" *ngIf=\"select_toggle\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"text\" name=\"College_Code\" class=\"form-control\" placeholder=\" \"\r\n                              id=\"College_Code\" required formControlName=\"College_Code\" required>\r\n                            <label for=\"College_Code\">Select College Code</label>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"text\" name=\"User_Name\" pattern=\"^[A-Za-z\\s .]+$\" class=\"form-control\"\r\n                              placeholder=\" \"maxlength=\"10\" minlength=\"3\" id=\"User_Name\" formControlName=\"User_Name\" required>\r\n                            <label for=\"User_Name\">User Name<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['User_Name'].invalid && (angForm.controls['User_Name'].dirty || angForm.controls['User_Name'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['User_Name'].errors?.pattern || angForm.controls['User_Name'].errors?.maxlength || angForm.controls['User_Name'].errors?.minlength || angForm.controls['User_Name'].errors?.required\">\r\n                            Please Enter Valid User Name\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"password\" name=\"Create_Password\"\r\n                              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n                              minlength=\"4\" \r\n                              class=\"form-control\"  [NgPasswordValidator]=\"options\" (valid)=\"isValid($event)\" (keyup)=\"onInput($event)\" placeholder=\" \" id=\"Create_Password\"\r\n                              formControlName=\"Create_Password\" required >\r\n                            <label for=\"Create_Password\"> Create Password<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                      \r\n                        <!-- <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['Create_Password'].invalid && (angForm.controls['Create_Password'].dirty || angForm.controls['Create_Password'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['Create_Password'].errors?.pattern || angForm.controls['Create_Password'].errors?.maxlength || angForm.controls['Create_Password'].errors?.minlength || angForm.controls['Create_Password'].errors?.required\">\r\n                            Please Enter Valid Password\r\n                          </div>\r\n                        </div> -->\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"row\">\r\n\r\n\r\n                      <div class=\"col-sm-12 \">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"password\" name=\"Confirm_Password\"\r\n                              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n                              class=\"form-control\" placeholder=\" \" id=\"Confirm_Password\" (focusout)=\"checkPassword() \"\r\n                              formControlName=\"Confirm_Password\" required>\r\n                            <label for=\"Confirm_Password\">Confirm Password<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['Confirm_Password'].invalid && (angForm.controls['Confirm_Password'].dirty || angForm.controls['Confirm_Password'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['Confirm_Password'].errors?.pattern || angForm.controls['Confirm_Password'].errors?.maxlength || angForm.controls['Confirm_Password'].errors?.minlength || angForm.controls['Confirm_Password'].errors?.required\">\r\n                            Please Enter Valid Password\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                    <div>\r\n                      <div class=\"row mt-3\">\r\n                        <div class=\"col-sm-12 right\">\r\n                          <button class=\"btn btn-primary  ripple light \" style=\"margin-right:5px\">Submit</button>\r\n                          <button class=\"btn btn-dark ripple light\" [routerLink]=\"['/auth/login/simple']\">Back</button>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n     ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BasicRegComponent } from './basic-reg.component';\nimport {BasicRegRoutingModule} from './basic-reg-routing.module';\nimport {SharedModule} from '../../../../shared/shared.module';\nimport { ReactiveFormsModule,FormsModule } from '@angular/forms';\nimport { NgPasswordValidatorModule } from 'ng-password-validator';\nimport { BasicRegService } from './basic-reg.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BasicRegRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgPasswordValidatorModule\n  ],\n  declarations: [BasicRegComponent,],\n  providers:[BasicRegService]\n})\nexport class BasicRegModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport {environment}  from '../../../../../environments/environment'\n@Injectable()\nexport class BasicRegService {\n    // Variable for handleError\n    [x: string]: any;\n    // API \n    // // customer-id\";\n    url = environment.base_url;\n\n    constructor(private http: HttpClient) { }\n\n    //Insertion Operation\n    postData(data: any): Observable<any> {\n        return this.http.post(this.url + '/customer-id/insert', data).pipe(map((res) => res),\n            catchError((error) => {\n                Swal.fire('Please Input Proper Data!');\n                return throwError(error);\n            })\n        )\n    }\n    // For append data\n    getFormData(id: any): Observable<any> {\n        return this.http.get(this.url + '/customer-id/' + id).pipe(catchError(this.handleError));\n    }\n    //Updation Operation\n    updateData(data): Observable<any> {\n        return this.http.put(this.url + '/customer-id/update', data);\n    }\n    //Deletion Operation\n    deleteData(id: any): Observable<any> {\n        return this.http.delete(this.url + '/customer-id/delete/' + id).pipe(catchError(this.handleError));\n    }  \n}\n\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { BasicRegComponent } from './basic-reg/basic-reg.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component : BasicRegComponent,\r\n    data: {\r\n      title: 'Registration',\r\n      status: false\r\n    },\r\n    children: [\r\n      {\r\n        path: 'simple',\r\n        loadChildren: () => import('./basic-reg/basic-reg.module').then(m => m.BasicRegModule)\r\n      },\r\n      {\r\n        path: 'header-footer',\r\n        loadChildren: () => import('./header-footer-reg/header-footer-reg.module').then(m => m.HeaderFooterRegModule)\r\n      },\r\n      {\r\n        path: 'social',\r\n        loadChildren: () => import('./social-reg/social-reg.module').then(m => m.SocialRegModule)\r\n      },\r\n      {\r\n        path: 'social-header-footer',\r\n        loadChildren: () => import('./social-header-footer-reg/social-header-footer-reg.module').then(m => m.SocialHeaderFooterRegModule)\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegistrationRoutingModule { }\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RegistrationRoutingModule} from './registration-routing.module';\nimport {SharedModule} from '../../../shared/shared.module';\nimport{BasicRegModule} from './basic-reg/basic-reg.module'\n@NgModule({\n  imports: [\n    CommonModule,\n    RegistrationRoutingModule,\n    SharedModule,\n    BasicRegModule\n    \n  ],\n  declarations: []\n})\nexport class RegistrationModule { }\n"],"sourceRoot":"webpack:///"}