{"version":3,"sources":["./src/app/theme/auth/forgot/forgot-routing.module.ts","./src/app/theme/auth/forgot/forgot.component.ts","./src/app/theme/auth/forgot/forgot.component.html","./src/app/theme/auth/forgot/forgot.module.ts"],"names":[],"mappings":"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","file":"forgot-forgot-module.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ForgotComponent} from './forgot.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ForgotComponent,\r\n    data: {\r\n      title: 'Forgot'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ForgotRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../../auth.service';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { BasicRegService } from '../registration/basic-reg/basic-reg.service';\r\nimport { NgPasswordValidatorOptions } from \"ng-password-validator\";\r\n\r\n@Component({\r\n  selector: 'app-forgot',\r\n  templateUrl: './forgot.component.html',\r\n  styleUrls: ['./forgot.component.scss']\r\n})\r\nexport class ForgotComponent implements OnInit {\r\n  inputValue: string;\r\n  forgotAnswer: any;\r\n  options: NgPasswordValidatorOptions = {\r\n    placement: \"bottom\",\r\n    \"animation-duration\": 500\r\n  };\r\n  email: any;\r\n  forgetPassword: boolean = false;\r\n  forgetAnswer: boolean = true;\r\n  password: any;\r\n  confirmpassword: any;\r\n  selectQue: any\r\n  angForm: FormGroup;\r\n  form: FormGroup;\r\n  passType: string = 'password';\r\n  passType1: string = 'password';\r\n  questions = []\r\n\r\n  constructor(private _authService: AuthService, private _basicreg: BasicRegService, private router: Router, private fb: FormBuilder, private config: NgSelectConfig,\r\n    private http: HttpClient,) { }\r\n\r\n\r\n  ngOnInit() {\r\n    document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\r\n    this._basicreg.getQuestionData().subscribe(data => {\r\n      this.questions = data\r\n    })\r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      Type: new FormControl('Student'),\r\n      email: [''],\r\n      question: [''],\r\n      answer: [''],\r\n    });\r\n  }\r\n  value(event) {\r\n    this.selectQue = event.CODE\r\n  }\r\n  SubmitAnswer() {\r\n    const dataToSend = {\r\n      'email': this.email,\r\n      'question': this.selectQue,\r\n      'answer': this.forgotAnswer,\r\n    }\r\n    this._authService.forgetPassword(dataToSend).subscribe(data => {\r\n      if (data == true) {\r\n        this.forgetPassword = true\r\n        this.forgetAnswer = false\r\n      }\r\n      else {\r\n        this.forgetPassword = false;\r\n        Swal.fire(\"Warning!\", \"Please Fill Correct Data !\", \"error\");\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  resetPassword() {\r\n    if ((this.password == this.confirmpassword) || (this.password == '' && this.confirmpassword != '')) {\r\n      const dataToSend = {\r\n        'email': this.email,\r\n        'PASSWORD': this.password,\r\n      }\r\n\r\n      this._authService.resetPassword(dataToSend).subscribe(data => {\r\n        Swal.fire({\r\n          title: 'Success',\r\n          text: \"Password Reset Successfully\",\r\n          icon: 'success',\r\n          confirmButtonColor: '#229954',\r\n          confirmButtonText: 'OK'\r\n        })\r\n        this.router.navigate(['/auth/login/simple']);\r\n      }, err => {\r\n        console.log(err);\r\n      })\r\n    } else {\r\n      Swal.fire({\r\n        title: '',\r\n        text: \"Please Check Your Password And Confirm Password\",\r\n        icon: 'error',\r\n        confirmButtonColor: '#229954',\r\n        confirmButtonText: 'OK'\r\n      })\r\n    }\r\n\r\n  }\r\n  showHidePassword() {\r\n    if (this.passType == 'password') {\r\n      this.passType = 'text';\r\n    }\r\n    else {\r\n      this.passType = 'password';\r\n    }\r\n  }\r\n  showHidePassword1() {\r\n    if (this.passType1 == 'password') {\r\n      this.passType1 = 'text';\r\n    }\r\n    else {\r\n      this.passType1 = 'password';\r\n    }\r\n  }\r\n  onInput(event: any): void {\r\n    this.inputValue = event.target.value;\r\n  }\r\n  defaultOptions = {\r\n    placement: \"bottom\",\r\n    \"z-index\": 0,\r\n    \"custom-class\": \"custom-class\",\r\n    shadow: true,\r\n    theme: \"pro\",\r\n    offset: 8,\r\n    heading: \"Password Policy\",\r\n    successMessage: \"Awesome! Password requirement fulfilled.\",\r\n    rules: {\r\n      password: {\r\n        type: \"range\",\r\n        length: 8,\r\n        min: 6,\r\n        max: 10,\r\n      },\r\n      \"include-symbol\": true,\r\n      \"include-number\": true,\r\n      \"include-lowercase-characters\": true,\r\n      \"include-uppercase-characters\": true,\r\n    }\r\n  };\r\n  formOnChange(): void {\r\n    this.form.valueChanges.subscribe((value: any) => {\r\n      this.options[\"rules\"] = {\r\n        \"include-lowercase-characters\": value[\"include-lowercase-characters\"],\r\n        \"include-uppercase-characters\": value[\"include-uppercase-characters\"],\r\n        \"include-symbol\": value[\"include-symbol\"],\r\n        \"include-number\": value[\"include-number\"],\r\n        password: value.password ? {\r\n          type: value.type,\r\n          length: value.length,\r\n          min: value.min,\r\n          max: value.max,\r\n        } : false\r\n      };\r\n\r\n      this.updateOptions({ ...value });\r\n\r\n    });\r\n\r\n    this.form.get(\"type\").valueChanges.subscribe((type: string) => {\r\n      switch (type) {\r\n        case \"range\":\r\n          this.form.patchValue({\r\n            length: \"\",\r\n            min: \"6\",\r\n            max: \"10\",\r\n          });\r\n          break;\r\n        case \"number\":\r\n          this.form.patchValue({\r\n            length: \"8\",\r\n            min: \"\",\r\n            max: \"\",\r\n          });\r\n      }\r\n\r\n    });\r\n\r\n    this.form.get(\"top\").valueChanges.subscribe((top: string) => {\r\n      this.options[\"position\"] = {\r\n        top: +top,\r\n        left: this.form.get(\"left\").value ? +this.form.get(\"left\").value : 0\r\n      };\r\n    });\r\n\r\n    this.form.get(\"left\").valueChanges.subscribe((left: string) => {\r\n      this.options[\"position\"] = {\r\n        left: +left,\r\n        top: this.form.get(\"top\").value ? +this.form.get(\"top\").value : 0\r\n      };\r\n    });\r\n  }\r\n  updateOptions(value: any): void {\r\n    delete value.top;\r\n    delete value.left;\r\n    delete value[\"include-uppercase-characters\"];\r\n    delete value[\"include-lowercase-characters\"];\r\n    delete value[\"include-symbol\"];\r\n    delete value[\"include-number\"];\r\n    delete value.password;\r\n    delete value.type;\r\n    delete value.length;\r\n    delete value.min;\r\n    delete value.max;\r\n\r\n    this.options = { ...this.options, ...value };\r\n    this.applyDefault(this.options);\r\n\r\n  }\r\n  applyDefault(obj) {\r\n    for (let propName in obj) {\r\n      if (obj[propName] === \"\") {\r\n        this.options[propName] = this.defaultOptions[propName];\r\n      }\r\n    }\r\n  }\r\n}\r\n","<section class=\"login-block\">\r\n    <!-- Container-fluid starts -->\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <!-- Authentication card start -->\r\n\r\n                <form class=\"md-float-material form-material\">\r\n                    <div class=\"auth-box card\">\r\n                        <div class=\"card-body\">\r\n                            <div class=\"row m-b-20\">\r\n                                <div class=\"col-md-12\">\r\n                                    <h3 class=\"text-left\">Recover your password</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"forgetAnswer\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <input type=\"text\" name=\"email-address\" [(ngModel)]=\"email\" class=\"form-control\"\r\n                                        id=\"email\" required=\"\">\r\n                                    <span class=\"form-bar\"></span>\r\n                                    <label class=\"float-label\">Email Address</label>\r\n                                </div>\r\n\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <label>Select Question</label>\r\n                                    <ng-select [items]=\"questions\" bindValue=\"CODE\" bindLabel=\"NAME\"\r\n                                        [(ngModel)]=\"selectQue\" (change)=\"value($event)\"\r\n                                        placeholder=\"Select Password Recovery Question\">\r\n                                    </ng-select>\r\n                                </div>\r\n\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <input type=\"text\" name=\"answer\" [(ngModel)]=\"forgotAnswer\" class=\"form-control\"\r\n                                        required=\"\">\r\n                                    <span class=\"form-bar\"></span>\r\n                                    <label class=\"float-label\">Your Answer</label>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-6\">\r\n                                        <button type=\"button\" (click)=\"SubmitAnswer()\"\r\n                                            class=\"btn btn-primary btn-md btn-block waves-light text-center m-b-20 ripple\">\r\n                                            <b style=\"color: white;\">Submit\r\n                                                Answer</b></button>\r\n                                    </div>\r\n                                    <div class=\"col-md-6\">\r\n                                        <button\r\n                                            class=\"btn btn-dark btn-md btn-block waves-light text-center m-b-20 ripple\"\r\n                                            [routerLink]=\"['/auth/login/simple']\"><b\r\n                                                style=\"color: white;\">Back</b></button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <hr />\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-8 text-left f-left\" >\r\n                                        <label class=\"text-center m-b-0\"> &copy; Compserv Consultant Pvt. Ltd.</label>\r\n                                    </div>\r\n                                    <div class=\"col-md-4 text-right f-right\">\r\n                                        <img src=\"assets/images/bways.png\" alt=\"small-logo.png\" style=\"width: 100%;\"\r\n                                            class=\"logosize\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div *ngIf=\"forgetPassword\">\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <input [type]=\"passType\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control\"\r\n                                        style=\"width: 90%;\" [NgPasswordValidator]=\"options\" (keyup)=\"onInput($event)\"  pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\">\r\n                                    <span toggle=\"#password-field\"\r\n                                        style=\"font-size: 20px;color: #262d38; cursor: pointer;\"\r\n                                        class=\"fa fa-fw fa-eye field-icon toggle-password\"\r\n                                        (click)=\"showHidePassword()\"></span>\r\n                                    <span class=\"form-bar\"></span>\r\n                                    <label class=\"float-label\">Password</label>\r\n                                </div>\r\n                                <div class=\"form-group form-primary form-static-label\">\r\n                                    <input [type]=\"passType1\" name=\"confrm_password\" [(ngModel)]=\"confirmpassword\"\r\n                                        class=\"form-control\" style=\"width: 90%;\"   pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\">\r\n                                    <span toggle=\"#password-field\"\r\n                                        style=\"font-size: 20px;color: #262d38; cursor: pointer;\"\r\n                                        class=\"fa fa-fw fa-eye field-icon toggle-password\"\r\n                                        (click)=\"showHidePassword1()\"></span>\r\n                                    <span class=\"form-bar\"></span>\r\n                                    <label class=\"float-label\">Confirm Password</label>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12\">\r\n                                        <button type=\"button\" (click)=\"resetPassword()\"\r\n                                            class=\"btn btn-primary btn-md btn-block waves-light text-center m-b-20 ripple\"><b\r\n                                                style=\"color: white;\">Reset\r\n                                                Password</b></button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <!-- end of col-sm-12 -->\r\n        </div>\r\n        <!-- end of row -->\r\n    </div>\r\n    <!-- end of container-fluid -->\r\n</section>\r\n<!-- <div class=\"footer\">\r\n    <p class=\"text-center m-b-0\"> &copy; Compserv Consultant Pvt. Ltd.</p>\r\n</div> -->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ForgotComponent } from './forgot.component';\r\nimport { ForgotRoutingModule } from './forgot-routing.module';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgPasswordValidatorModule } from 'ng-password-validator';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BasicRegService } from '../../auth/registration/basic-reg/basic-reg.service';\r\n// import { BasicRegService } from '../basic-reg.service';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ForgotRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    ReactiveFormsModule,\r\n    NgPasswordValidatorModule\r\n  ],\r\n  declarations: [ForgotComponent],\r\n  providers: [BasicRegService]\r\n})\r\nexport class ForgotModule { }\r\n"],"sourceRoot":"webpack:///"}