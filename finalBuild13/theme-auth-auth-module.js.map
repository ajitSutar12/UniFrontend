{"version":3,"sources":["./src/app/theme/auth/auth-routing.module.ts","./src/app/theme/auth/auth.module.ts","./src/app/theme/auth/registration/basic-reg/basic-reg-routing.module.ts","./src/app/theme/auth/registration/basic-reg/basic-reg.component.ts","./src/app/theme/auth/registration/basic-reg/basic-reg.component.html","./src/app/theme/auth/registration/basic-reg/basic-reg.module.ts","./src/app/theme/auth/registration/basic-reg/basic-reg.service.ts","./src/app/theme/auth/registration/registration-routing.module.ts","./src/app/theme/auth/registration/registration.module.ts"],"names":[],"mappings":"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","file":"theme-auth-auth-module.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Authentication',\r\n      status: false\r\n    },\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\r\n      },\r\n      {\r\n        path: 'registration',\r\n        loadChildren: () => import('./registration/registration.module').then(m => m.RegistrationModule)\r\n      },\r\n      {\r\n        path: 'forgot',\r\n        loadChildren: () => import('./forgot/forgot.module').then(m => m.ForgotModule)\r\n      },\r\n      {\r\n        path: 'lock-screen',\r\n        loadChildren: () => import('./lock-screen/lock-screen.module').then(m => m.LockScreenModule)\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {AuthRoutingModule} from './auth-routing.module';\r\nimport {SharedModule} from '../../shared/shared.module';\r\nimport{RegistrationModule} from './registration/registration.module'\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    SharedModule,\r\n    RegistrationModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class AuthModule { }\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {BasicRegComponent} from './basic-reg.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BasicRegComponent,\r\n    data: {\r\n      title: 'Simple Registration'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BasicRegRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from \"@angular/forms\";\r\nimport { NgPasswordValidatorOptions } from \"ng-password-validator\";\r\n// Displaying Sweet Alert\r\nimport Swal from \"sweetalert2\";\r\nimport { BasicRegService } from './basic-reg.service'\r\nimport { NgSelectConfig } from '@ng-select/ng-select';\r\nimport { concat, Observable, of, Subject, throwError } from 'rxjs';\r\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, tap, map, filter } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../../environments/environment'\r\nimport { Router } from '@angular/router';\r\nimport { CustomValidators } from './custom-validators';\r\n\r\ninterface Basicreginterface {\r\n  Type: boolean\r\n  Full_Name: string,\r\n  Mobile_No: number,\r\n  Email_Address: string,\r\n  College_Code: string,\r\n  User_Name: string,\r\n  Create_Password: string,\r\n  Confirm_Password: string,\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'app-basic-reg',\r\n  templateUrl: './basic-reg.component.html',\r\n  styleUrls: ['./basic-reg.component.scss']\r\n})\r\nexport class BasicRegComponent implements OnInit {\r\n  inputValue: string;\r\n  form: FormGroup;\r\n  options: NgPasswordValidatorOptions = {\r\n    placement: \"bottom\",\r\n    \"animation-duration\": 500\r\n  };\r\n  select_toggle: boolean = false;\r\n  // Created Form Group\r\n  angForm: FormGroup;\r\n  //password block hide and show\r\n  hidenshow: boolean = false;\r\n  toastr: any;\r\n\r\n  url = environment.base_url;\r\n\r\n  collegeCodeList = []\r\n  selectedCar1: number;\r\n\r\n  questions = []\r\n  selectQue\r\n  collgeCode: Observable<any>;\r\n  collegeCodeLoading = false;\r\n  collegeCodeInput = new Subject<string>();\r\n  selectedCode: any;\r\n  minLengthTerm = 2;\r\n\r\n  constructor(private fb: FormBuilder, private _basicreg: BasicRegService, private config: NgSelectConfig,\r\n    private http: HttpClient, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.formInIt();\r\n    this.createForm();\r\n    this.loadCollegeCode();\r\n    this._basicreg.getQuestionData().subscribe(data => {\r\n      this.questions = data\r\n    })\r\n    document.querySelector('body').setAttribute('themebg-pattern', 'theme1');\r\n  }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      Type: new FormControl('Student'),\r\n      Full_Name: [\"\", [Validators.required]],\r\n      Mobile_No: [\"\", [Validators.required]],\r\n      Email_Address: [\"\", [Validators.required]],\r\n      College_Code: [\"\",],\r\n      User_Name: [\"\", [Validators.required, Validators.pattern]],\r\n      Create_Password: [\"\", [Validators.required, Validators.pattern]],\r\n      Confirm_Password: [\"\", [Validators.required, Validators.pattern]],\r\n      PASSREQQUE: [\" \", [Validators.required]],\r\n      PASSREQANS: [\"\", [Validators.pattern, Validators.required]],\r\n\r\n      // User_Name: [\r\n      //   \"\",\r\n      //   Validators.compose([\r\n      //     Validators.required,\r\n      //     // check whether the entered password has a number\r\n      //     CustomValidators.patternValidator(/\\d/, {\r\n      //       hasNumber: true\r\n      //     }),\r\n      //     // check whether the entered password has upper case letter\r\n      //     CustomValidators.patternValidator(/[A-Z]/, {\r\n      //       hasCapitalCase: true\r\n      //     }),\r\n      //     // check whether the entered password has a lower case letter\r\n      //     CustomValidators.patternValidator(/[a-z]/, {\r\n      //       hasSmallCase: true\r\n      //     }),\r\n      //     // check whether the entered password has a special character\r\n      //     CustomValidators.patternValidator(\r\n      //       /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/,\r\n      //       {\r\n      //         hasSpecialCharacters: true\r\n      //       }\r\n      //     ),\r\n      //     Validators.minLength(8)\r\n      //   ])\r\n      // ],\r\n    });\r\n  }\r\n\r\n  onInput(event: any): void {\r\n    this.inputValue = event.target.value;\r\n  }\r\n\r\n  //dropdown bind\r\n  trackByFn(item: any) {\r\n    return item.imdbID;\r\n  }\r\n\r\n  loadCollegeCode() {\r\n    this.collgeCode = concat(\r\n      of([]), // default items\r\n      this.collegeCodeInput.pipe(\r\n        filter(res => {\r\n          return res !== null && res.length >= this.minLengthTerm\r\n        }),\r\n        distinctUntilChanged(),\r\n        debounceTime(800),\r\n        tap(() => this.collegeCodeLoading = true),\r\n        switchMap(term => {\r\n\r\n          return this.getCollegeCode(term).pipe(\r\n            catchError(() => of([])), // empty list on error\r\n            tap(() => this.collegeCodeLoading = false)\r\n          )\r\n        })\r\n      )\r\n    );\r\n\r\n  }\r\n\r\n  getCollegeCode(term: string = null): Observable<any> {\r\n    return this.http\r\n      .get<any>(this.url + '/registration/collegecode' + term)\r\n      .pipe(map(resp => {\r\n        if (resp.Error) {\r\n          throwError(resp.Error);\r\n        } else {\r\n          return resp;\r\n        }\r\n      })\r\n      );\r\n  }\r\n\r\n\r\n  submit() {\r\n    \r\n    if (this.angForm.valid) {\r\n      const formVal = this.angForm.value;\r\n      if (formVal.Type == 'Student') {\r\n        formVal.Type = 0\r\n        formVal.College_Code = 0\r\n      }\r\n      else if (formVal.Type == 'College') {\r\n        formVal.Type = 1\r\n      }\r\n      else {\r\n        formVal.Type = 2\r\n        formVal.College_Code = 0\r\n      }\r\n      const dataToSend = {\r\n        'USER_TYPE': formVal.Type,\r\n        'NAME': formVal.Full_Name,\r\n        'CELL_NO': formVal.Mobile_No,\r\n        'EMAIL_ID': formVal.Email_Address,\r\n        'COLLEGE_CODE': parseInt(formVal.College_Code),\r\n        'USER_NAME': formVal.User_Name,\r\n        'PASSWORD': formVal.Confirm_Password,\r\n        'PASSREQQUE': formVal.PASSREQQUE,\r\n        'PASSREQANS': formVal.PASSREQANS,\r\n      }\r\n      this._basicreg.postData(dataToSend).subscribe(\r\n        (data) => {\r\n          Swal.fire(\"Success!\", \"Data Added Successfully !\", \"success\");\r\n          this.router.navigate(['/auth/login/simple']);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n      //To clear form\r\n      this.resetForm();\r\n    }\r\n  }\r\n  // Reset Function\r\n  resetForm() {\r\n    this.createForm();\r\n    this.selectstudent()\r\n  }\r\n\r\n  defaultOptions = {\r\n    placement: \"bottom\",\r\n    \"z-index\": 0,\r\n    \"custom-class\": \"custom-class\",\r\n    shadow: true,\r\n    theme: \"pro\",\r\n    offset: 8,\r\n    heading: \"Password Policy\",\r\n    successMessage: \"Awesome! Password requirement fulfilled.\",\r\n    rules: {\r\n      password: {\r\n        type: \"range\",\r\n        length: 12,\r\n        min: 8,\r\n        max: 12,\r\n      },\r\n      \"include-symbol\": true,\r\n      \"include-number\": true,\r\n      \"include-lowercase-characters\": true,\r\n      \"include-uppercase-characters\": true,\r\n    }\r\n  };\r\n  formInIt(): void {\r\n    this.form = this.fb.group({\r\n      theme: [\"pro\"],\r\n      placement: [\"bottom\"],\r\n      shadow: [true],\r\n      \"custom-class\": [\"\"],\r\n      \"z-index\": [\"\"],\r\n      \"animation-duration\": [\"\"],\r\n      offset: [\"10\"],\r\n      width: [\"\"],\r\n      \"max-width\": [\"\"],\r\n      top: [\"\"],\r\n      left: [\"\"],\r\n      password: [true],\r\n      \"include-uppercase-characters\": [true],\r\n      \"include-lowercase-characters\": [true],\r\n      \"include-symbol\": [true],\r\n      \"include-number\": [true],\r\n      type: [\"range\"],\r\n      length: [\"\"],\r\n      min: [\"8\"],\r\n      max: [\"12\"],\r\n      heading: [\"\"],\r\n      successMessage: [\"\"],\r\n    });\r\n    this.formOnChange();\r\n  }\r\n  isValid(event: boolean): void {\r\n    if (this.inputValue && this.inputValue.length) {\r\n      if (event) {\r\n        this.toastr.success(\"Password is Valid.\", \"Successful!\");\r\n      } else {\r\n        this.toastr.error(\"Password is invalid.\", \"Error!\");\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  formOnChange(): void {\r\n    this.form.valueChanges.subscribe((value: any) => {\r\n      this.options[\"rules\"] = {\r\n        \"include-lowercase-characters\": value[\"include-lowercase-characters\"],\r\n        \"include-uppercase-characters\": value[\"include-uppercase-characters\"],\r\n        \"include-symbol\": value[\"include-symbol\"],\r\n        \"include-number\": value[\"include-number\"],\r\n        password: value.password ? {\r\n          type: value.type,\r\n          length: value.length,\r\n          min: value.min,\r\n          max: value.max,\r\n        } : false\r\n      };\r\n\r\n      this.updateOptions({ ...value });\r\n\r\n    });\r\n\r\n    this.form.get(\"type\").valueChanges.subscribe((type: string) => {\r\n      switch (type) {\r\n        case \"range\":\r\n          this.form.patchValue({\r\n            length: \"\",\r\n            min: \"8\",\r\n            max: \"12\",\r\n          });\r\n          break;\r\n        case \"number\":\r\n          this.form.patchValue({\r\n            length: \"12\",\r\n            min: \"\",\r\n            max: \"\",\r\n          });\r\n      }\r\n\r\n    });\r\n\r\n    this.form.get(\"top\").valueChanges.subscribe((top: string) => {\r\n      this.options[\"position\"] = {\r\n        top: +top,\r\n        left: this.form.get(\"left\").value ? +this.form.get(\"left\").value : 0\r\n      };\r\n    });\r\n\r\n    this.form.get(\"left\").valueChanges.subscribe((left: string) => {\r\n      this.options[\"position\"] = {\r\n        left: +left,\r\n        top: this.form.get(\"top\").value ? +this.form.get(\"top\").value : 0\r\n      };\r\n    });\r\n  }\r\n  updateOptions(value: any): void {\r\n    delete value.top;\r\n    delete value.left;\r\n    delete value[\"include-uppercase-characters\"];\r\n    delete value[\"include-lowercase-characters\"];\r\n    delete value[\"include-symbol\"];\r\n    delete value[\"include-number\"];\r\n    delete value.password;\r\n    delete value.type;\r\n    delete value.length;\r\n    delete value.min;\r\n    delete value.max;\r\n\r\n    this.options = { ...this.options, ...value };\r\n    this.applyDefault(this.options);\r\n\r\n  }\r\n  applyDefault(obj) {\r\n    for (let propName in obj) {\r\n      if (obj[propName] === \"\") {\r\n        this.options[propName] = this.defaultOptions[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  clgCode: boolean = false\r\n  //toggle select college code\r\n  select() {\r\n    this.clgCode = true\r\n    this.select_toggle = !this.select_toggle;\r\n  }\r\n  selectanybody() {\r\n    this.select_toggle = false;\r\n    this.clgCode = false\r\n  }\r\n  selectstudent() {\r\n    this.select_toggle = false;\r\n    this.clgCode = false\r\n  }\r\n\r\n  //function to confirm password\r\n  checkPassword() {\r\n    let password1 = ((document.getElementById(\"Create_Password\") as HTMLInputElement).value);\r\n    let password2 = ((document.getElementById(\"Confirm_Password\") as HTMLInputElement).value);\r\n\r\n    // If password not entered\r\n    if (password1 == '') {\r\n      Swal.fire(\"Warning!\", \"Please enter Password !\", \"warning\");\r\n\r\n    }\r\n\r\n\r\n    // If confirm password not entered\r\n    else if (password2 == '') {\r\n      Swal.fire(\"Warning!\", \"Please enter confirm password!\", \"warning\");\r\n\r\n    }\r\n    // alert (\"Please enter confirm password\");\r\n\r\n    // If Not same return False.    \r\n    else if (password1 != password2) {\r\n      Swal.fire(\"Warning!\", \"Password did not match: Please try again...!\", \"warning\");\r\n    }\r\n  }\r\n\r\n}\r\n","<section class=\"login-block\">\r\n  <!-- Container-fluid starts -->\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <form action=\"javascript:\" [formGroup]=\"angForm\">\r\n          <div class=\"row mt-3\">\r\n            <div class=\"col-sm-5\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body \">\r\n                  <img src=\"assets/images/SUK-Name.gif\" class=\"imagesize\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-5\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body card_padding\">\r\n                  <div class=\"row m-b-6\">\r\n                    <div class=\"col-md-12\">\r\n                      <h4 class=\"text-center\">Registration Form</h4>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"card-block \">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm \">\r\n                        <div class=\"form-radio\">\r\n                          <h5 style=\"font-size: 14px;\">Select Your Registration Type</h5>\r\n                          <div class=\"radio radio-inline\">\r\n                            <label>\r\n                              <input type=\"radio\" value=\"Student\" name=\"Type\" formControlName=\"Type\" [checked]=\"true\"\r\n                                (click)=\"selectstudent()\">\r\n                              <i class=\"helper\"></i>Student<span class=\"required\"> </span>\r\n                            </label>\r\n                          </div>\r\n                          <!-- <div class=\"radio radio-inline\">\r\n                            <label>\r\n                              <input type=\"radio\" value=\"College\" formControlName=\"Type\" name=\"Type\" (click)=\"select()\">\r\n                              <i class=\"helper\"></i>College<span class=\"required\"> </span>\r\n                            </label>\r\n                          </div> -->\r\n                          <div class=\"radio radio-inline\">\r\n                            <label>\r\n                              <input type=\"radio\" value=\"Anybody\" name=\"Type\" formControlName=\"Type\"\r\n                                (click)=\"selectanybody()\">\r\n                              <i class=\"helper\"></i>Anybody<span class=\"required\"> </span>\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"text\" name=\"FullName\" class=\"form-control\" placeholder=\" \" id=\"Full_Name\"\r\n                              pattern=\"^[A-Za-z\\s]+$\" formControlName=\"Full_Name\" required>\r\n                            <label for=\"Full_Name\">Full Name<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['Full_Name'].invalid && (angForm.controls['Full_Name'].dirty || angForm.controls['Full_Name'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['Full_Name'].errors?.pattern || angForm.controls['Full_Name'].errors?.required\">\r\n                            This field is required and Input allowed only A-Z\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"text\" name=\"Mobile_No\" class=\"form-control\" placeholder=\" \" id=\"Mobile_No\"\r\n                              pattern=\"[7-9 0]{1}[0-9]{9}\" maxlength=\"10\" minlength=\"10\" formControlName=\"Mobile_No\"\r\n                              required>\r\n                            <label for=\"Mobile_No\">Mobile Number<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['Mobile_No'].invalid && (angForm.controls['Mobile_No'].dirty || angForm.controls['Mobile_No'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['Mobile_No'].errors?.pattern || angForm.controls['Mobile_No'].errors?.maxlength || angForm.controls['Mobile_No'].errors?.minlength || angForm.controls['Mobile_No'].errors?.required\">\r\n                            Input allowed only 0-9 and It starts by either for 7 or 8 or 9,\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"text\" name=\"Email_Address\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.com$\"\r\n                              class=\"form-control\" placeholder=\" \" minlength=\"11\" id=\"Email_Address\"\r\n                              formControlName=\"Email_Address\" required>\r\n                            <label for=\"Email_Address\">Email<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['Email_Address'].invalid && (angForm.controls['Email_Address'].dirty || angForm.controls['Email_Address'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['Email_Address'].errors?.pattern || angForm.controls['Email_Address'].errors?.maxlength || angForm.controls['Email_Address'].errors?.minlength || angForm.controls['Email_Address'].errors?.required\">\r\n                            Please Enter Valid Email Address\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row \" *ngIf=\"select_toggle\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <ng-select [items]=\"collgeCode | async\" bindLabel=\"NAME\" bindValue=\"ID\"\r\n                              [trackByFn]=\"trackByFn\" [minTermLength]=\"minLengthTerm\" [loading]=\"collegeCodeLoading\"\r\n                              typeToSearchText=\"Please enter {{minLengthTerm}} or more characters\"\r\n                              formControlName=\"College_Code\" [typeahead]=\"collegeCodeInput\" [(ngModel)]=\"selectedCode\"\r\n                              placeholder=\"Select College Code\" [required]=\"clgCode\">\r\n                            </ng-select>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"text\" name=\"User_Name\" class=\"form-control\" placeholder=\" \" maxlength=\"12\"\r\n                              minlength=\"12\" id=\"User_Name\" formControlName=\"User_Name\" required>\r\n                            <label for=\"User_Name\">User Name<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['User_Name'].invalid && (angForm.controls['User_Name'].dirty || angForm.controls['User_Name'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['User_Name'].errors?.pattern || angForm.controls['User_Name'].errors?.maxlength || angForm.controls['User_Name'].errors?.minlength || angForm.controls['User_Name'].errors?.required\">\r\n                            <!-- Please Enter Valid User Name -->\r\n                            Length of Username must be 12\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"password\" name=\"Create_Password\"\r\n                              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\" minlength=\"4\"\r\n                              class=\"form-control\" [NgPasswordValidator]=\"options\" (keyup)=\"onInput($event)\"\r\n                              placeholder=\" \" id=\"Create_Password\" formControlName=\"Create_Password\" required>\r\n                            <label for=\"Create_Password\"> Create Password<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12 \">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"password\" name=\"Confirm_Password\"\r\n                              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n                              class=\"form-control\" placeholder=\" \" id=\"Confirm_Password\" (focusout)=\"checkPassword() \"\r\n                              formControlName=\"Confirm_Password\" required>\r\n                            <label for=\"Confirm_Password\">Confirm Password<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['Confirm_Password'].invalid && (angForm.controls['Confirm_Password'].dirty || angForm.controls['Confirm_Password'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['Confirm_Password'].errors?.pattern || angForm.controls['Confirm_Password'].errors?.maxlength || angForm.controls['Confirm_Password'].errors?.minlength || angForm.controls['Confirm_Password'].errors?.required\">\r\n                            Please Enter Valid Password\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <ng-select [items]=\"questions\" bindValue=\"CODE\" bindLabel=\"NAME\" [(ngModel)]=\"selectQue\"\r\n                              formControlName=\"PASSREQQUE\" placeholder=\"Select Password Recovery Question\">\r\n                            </ng-select>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['PASSREQQUE'].invalid && (angForm.controls['PASSREQQUE'].dirty || angForm.controls['PASSREQQUE'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['PASSREQQUE'].errors?.pattern || angForm.controls['PASSREQQUE'].errors?.required\">\r\n                            This field is required\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-12\">\r\n                        <div class=\"form-group input-group\">\r\n                          <span class=\"border-lable-flt\">\r\n                            <input type=\"text\" name=\"PASSREQANS\" class=\"form-control\" placeholder=\" \" id=\"PASSREQANS\"\r\n                              pattern=\"^[A-Za-z\\s]+$\" formControlName=\"PASSREQANS\" required>\r\n                            <label for=\"PASSREQANS\">Password recovery Anwser<sub class=\"required\">* </sub></label>\r\n                          </span>\r\n                        </div>\r\n                        <div class=\"form-group form-primary form-static-label\"\r\n                          *ngIf=\"angForm.controls['PASSREQANS'].invalid && (angForm.controls['PASSREQANS'].dirty || angForm.controls['PASSREQANS'].touched)\"\r\n                          class=\"alert alert-danger\">\r\n                          <div\r\n                            *ngIf=\"angForm.controls['PASSREQANS'].errors?.pattern || angForm.controls['PASSREQANS'].errors?.required\">\r\n                            This field is required and Input allowed only A-Z\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <div class=\"row mt-3\">\r\n                        <div class=\"col-sm-12 right\">\r\n                          <button class=\"btn btn-primary  ripple light \" style=\"margin-right:5px\"\r\n                            (click)=\"submit()\">Submit</button>\r\n                          <button class=\"btn btn-dark ripple light\" [routerLink]=\"['/auth/login/simple']\">Back</button>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BasicRegComponent } from './basic-reg.component';\r\nimport { BasicRegRoutingModule } from './basic-reg-routing.module';\r\nimport { SharedModule } from '../../../../shared/shared.module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgPasswordValidatorModule } from 'ng-password-validator';\r\nimport { BasicRegService } from './basic-reg.service';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BasicRegRoutingModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgPasswordValidatorModule,\r\n    NgSelectModule\r\n  ],\r\n  declarations: [BasicRegComponent,],\r\n  providers: [BasicRegService]\r\n})\r\nexport class BasicRegModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/Rx';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { environment } from '../../../../../environments/environment'\r\n@Injectable()\r\nexport class BasicRegService {\r\n    // Variable for handleError\r\n    [x: string]: any;\r\n    // API \r\n    // // customer-id\";\r\n    url = environment.base_url;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //Insertion Operation\r\n    postData(data: any): Observable<any> {\r\n        return this.http.post(this.url + '/registration/insert', data).pipe(map((res) => res),\r\n            catchError((error) => {\r\n                console.log('error', error)\r\n                Swal.fire('User Already Exists!');\r\n                return throwError(error);\r\n            })\r\n        )\r\n    }\r\n    // For append data\r\n    getFormData(id: any): Observable<any> {\r\n        return this.http.get(this.url + '/customer-id/' + id).pipe(catchError(this.handleError));\r\n    }\r\n    //Updation Operation\r\n    updateData(data): Observable<any> {\r\n        return this.http.put(this.url + '/customer-id/update', data);\r\n    }\r\n    //Deletion Operation\r\n    deleteData(id: any): Observable<any> {\r\n        return this.http.delete(this.url + '/customer-id/delete/' + id).pipe(catchError(this.handleError));\r\n    }\r\n\r\n    getQuestionData(): Observable<any> {\r\n        return this.http.get(this.url + '/registration/QUESTIONS').pipe(catchError(this.handleError));\r\n    }\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { BasicRegComponent } from './basic-reg/basic-reg.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component : BasicRegComponent,\r\n    data: {\r\n      title: 'Registration',\r\n      status: false\r\n    },\r\n    children: [\r\n      {\r\n        path: 'simple',\r\n        loadChildren: () => import('./basic-reg/basic-reg.module').then(m => m.BasicRegModule)\r\n      },\r\n      {\r\n        path: 'header-footer',\r\n        loadChildren: () => import('./header-footer-reg/header-footer-reg.module').then(m => m.HeaderFooterRegModule)\r\n      },\r\n      {\r\n        path: 'social',\r\n        loadChildren: () => import('./social-reg/social-reg.module').then(m => m.SocialRegModule)\r\n      },\r\n      {\r\n        path: 'social-header-footer',\r\n        loadChildren: () => import('./social-header-footer-reg/social-header-footer-reg.module').then(m => m.SocialHeaderFooterRegModule)\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegistrationRoutingModule { }\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {RegistrationRoutingModule} from './registration-routing.module';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport{BasicRegModule} from './basic-reg/basic-reg.module'\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RegistrationRoutingModule,\r\n    SharedModule,\r\n    BasicRegModule\r\n    \r\n  ],\r\n  declarations: []\r\n})\r\nexport class RegistrationModule { }\r\n"],"sourceRoot":"webpack:///"}