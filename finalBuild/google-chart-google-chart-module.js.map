{"version":3,"sources":["./node_modules/ng2-google-charts/__ivy_ngcc__/fesm2015/ng2-google-charts.js","./src/app/theme/chart/google-chart/google-chart-routing.module.ts","./src/app/theme/chart/google-chart/google-chart.component.ts","./src/app/theme/chart/google-chart/google-chart.component.html","./src/app/theme/chart/google-chart/google-chart.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmE;AACiG;;AAE5H;AACxC;AACA;AACA;AACA,+CAA+C,0DAAY;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gFAAgF,6CAA6C,sDAAe,CAAC,uDAAS,GAAG,sDAAe,6BAA6B;AACrM,kCAAkC,wEAAkB,EAAE,wDAAwD,sCAAsC,8DAAQ,CAAC,uDAAS,GAAG,8DAAQ,6BAA6B,EAAE,wDAAwD;AACxQ,4BAA4B,wDAAU,GAAG,qDAAO,IAAI,4DAAM,CAAC,uDAAS;AACpE,IAAI,qDAAO,IAAI,4DAAM,2BAA2B,qDAAO,IAAI,8DAAQ;AACnE,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,CAAC,8DAAuB,GAAG;AACnG,6BAA6B,+DAAwB,EAAE,wCAAwC,uCAAuC,EAAE;AACxI,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C,sCAAsC,0DAAY;AAClD,8BAA8B,0DAAY;AAC1C,qCAAqC,0DAAY;AACjD,8BAA8B,0DAAY;AAC1C,qCAAqC,0DAAY;AACjD,6BAA6B,0DAAY;AACzC,oCAAoC,0DAAY;AAChD,4BAA4B,0DAAY;AACxC,mCAAmC,0DAAY;AAC/C,+BAA+B,0DAAY;AAC3C,sCAAsC,0DAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,kCAAkC,yBAAyB;AAC3D,SAAS;AACT;AACA,yCAAyC,oCAAoC;AAC7E;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,6BAA6B;AAChN,4BAA4B,+DAAwB,EAAE,qEAAqE,eAAe,YAAY,yYAAyY,gFAAgF;AAC/mB,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,uBAAuB,wDAAU,GAAG,wDAAU,uBAAuB,wDAAU;AAC/E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB,2CAA2C,yBAAyB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,kDAAkD,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,6BAA6B;AAC9O,sCAAsC,+DAAwB,EAAE,0FAA0F,eAAe,0FAA0F;AACnQ,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,iCAAiC,wDAAU,GAAG,wDAAU,uBAAuB,wDAAU;AACzF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA,2CAA2C,yBAAyB;AACpE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sFAAsF,gDAAgD,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,6BAA6B;AACxO,oCAAoC,+DAAwB,EAAE,sFAAsF,eAAe,wFAAwF;AAC3P,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,+BAA+B,wDAAU,GAAG,wDAAU,uBAAuB,wDAAU;AACvF;AACA;;AAEA;AACA;AACA,6BAA6B,8DAAuB,EAAE,8BAA8B;AACpF,6BAA6B,8DAAuB,EAAE,qDAAqD,2CAA2C,EAAE;AACxJ;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA,2CAA2C,4BAA4B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,gEAAgE,qCAAqC,sDAAe,6BAA6B;AACjJ,0BAA0B,wEAAkB,EAAE,gDAAgD,8BAA8B,8DAAQ,6BAA6B,EAAE,gDAAgD;AACnN,oBAAoB,wDAAU,GAAG,wDAAU;AAC3C;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,uDAAS;AAChC,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B;AACA,aAAa;AACb,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,kCAAkC,EAAE,EAAE,GAAG;AACrG,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,kCAAkC,EAAE,EAAE,GAAG;AACrG,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,kCAAkC,EAAE,EAAE,GAAG;AACrG,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,cAAc,oDAAoD,gEAAyB,yBAAyB,oMAAoM,EAAE,EAAE;AAC5T,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,kCAAkC,EAAE,EAAE,QAAQ,EAAE;;AAE/E;AACA;AACA;;AAEA;AACA;AACA;;AAEqL;;AAErL,6C;;;;;;;;;;;;AC/zBA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACc;AACS;;;AAE9D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAoB;QAC/B,IAAI,EAAE;YACJ,KAAK,EAAE,eAAe;YACtB,IAAI,EAAE,oBAAoB;YAC1B,OAAO,EAAE,yEAAyE;YAClF,MAAM,EAAE,IAAI;SACb;KACF;CACF,CAAC;AAMK,MAAM,wBAAwB;;uGAAxB,wBAAwB;0KAAxB,wBAAwB,kBAH1B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,wBAAwB,uFAFzB,4DAAY;6FAEX,wBAAwB;cAJpC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,oBAAoB;IA4L/B;QA3LA,kBAAa,GAAI;YACf,SAAS,EAAE,WAAW;YACtB,SAAS,EAAE;gBACT,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC;gBAC7B,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC;gBACnB,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC;gBACnB,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC;gBACnB,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC;aACpB;YACD,OAAO,EAAE;gBACP,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;gBACtB,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;gBAC9B,MAAM,EAAE,GAAG;aACZ;SACF,CAAC;QAEF,0BAAqB,GAAI;YACvB,SAAS,EAAE,WAAW;YACtB,SAAS,EAAE;gBACT,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC;gBAC7B,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC;gBACnB,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC;gBACnB,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC;gBACnB,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC;aACpB;YACD,OAAO,EAAE;gBACP,SAAS,EAAE,IAAI;gBACf,MAAM,EAAE,GAAG;gBACX,MAAM,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE;gBACxC,KAAK,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;gBACtB,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;aAC/B;SACF,CAAC;QAEF,iBAAY,GAAI;YACd,SAAS,EAAE,UAAU;YACrB,SAAS,EAAE;gBACT,CAAC,MAAM,EAAE,iBAAiB,EAAE,iBAAiB,CAAC;gBAC9C,CAAC,mBAAmB,EAAE,OAAO,EAAE,OAAO,CAAC;gBACvC,CAAC,iBAAiB,EAAE,OAAO,EAAE,OAAO,CAAC;gBACrC,CAAC,aAAa,EAAE,OAAO,EAAE,OAAO,CAAC;gBACjC,CAAC,aAAa,EAAE,OAAO,EAAE,OAAO,CAAC;gBACjC,CAAC,kBAAkB,EAAE,OAAO,EAAE,OAAO,CAAC;aACvC;YACD,OAAO,EAAE;gBACP,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,mCAAmC;gBAC1C,SAAS,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;gBAC3B,SAAS,EAAE,IAAI;gBACf,KAAK,EAAE;oBACL,KAAK,EAAE,kBAAkB;oBACzB,QAAQ,EAAE,CAAC;iBACZ;gBACD,KAAK,EAAE;oBACL,KAAK,EAAE,MAAM;iBACd;gBACD,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;aAC/B;SACF,CAAC;QAEF,oBAAe,GAAI;YACjB,SAAS,EAAE,aAAa;YACxB,SAAS,EAAE;gBACT,CAAC,IAAI,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,QAAQ,EAAE,YAAY,CAAC;gBACnE,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,eAAe,EAAE,QAAQ,CAAC;gBAC/C,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC;gBACxC,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC;gBACtC,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,CAAC;gBAC7C,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC;gBACrC,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ,CAAC;gBAC5C,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,CAAC;gBAC7C,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,CAAC;gBAC5C,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC;gBACxC,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,CAAC;aACjD;YACD,OAAO,EAAE;gBACP,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,sDAAsD;oBAC7D,+CAA+C;gBAC/C,KAAK,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;gBACnC,KAAK,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE;gBAClC,MAAM,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE;gBACvC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;aAC1C;SACF,CAAC;QAEF,mBAAc,GAAI;YAChB,SAAS,EAAE,YAAY;YACvB,SAAS,EAAE;gBACT,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,kBAAkB,EAAE,QAAQ,EAAE,SAAS,CAAC;gBACtF,CAAC,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC;gBAC3C,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;gBAC3C,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;gBAC1C,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC;gBAC5C,CAAC,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC;aAC7C;YACD,OAAO,EAAE;gBACP,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,sCAAsC;gBAC7C,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;gBACxB,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;gBACzB,UAAU,EAAE,MAAM;gBAClB,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;gBAC/B,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;aAC3E;SACF,CAAC;QAEF,mBAAc,GAAI;YAChB,SAAS,EAAE,UAAU;YACrB,SAAS,EAAE;gBACT,CAAC,MAAM,EAAE,eAAe,CAAC;gBACzB,CAAC,MAAM,EAAE,EAAE,CAAC;gBACZ,CAAC,KAAK,EAAE,CAAC,CAAC;gBACV,CAAC,SAAS,EAAE,CAAC,CAAC;gBACd,CAAC,UAAU,EAAE,CAAC,CAAC;gBACf,CAAC,OAAO,EAAE,CAAC,CAAC;aACb;YACD,OAAO,EAAE;gBACP,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,qBAAqB;gBAC5B,OAAO,EAAE,GAAG;gBACZ,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;aAChE;SACF,CAAC;QAEF,wBAAmB,GAAI;YACrB,SAAS,EAAE,UAAU;YACrB,SAAS,EAAE;gBACT,CAAC,UAAU,EAAE,wBAAwB,CAAC;gBACtC,CAAC,UAAU,EAAE,EAAE,CAAC;gBAChB,CAAC,SAAS,EAAE,EAAE,CAAC;gBACf,CAAC,MAAM,EAAE,GAAG,CAAC;gBACb,CAAC,OAAO,EAAE,GAAG,CAAC;gBACd,CAAC,UAAU,EAAE,EAAE,CAAC;gBAChB,CAAC,OAAO,EAAE,GAAG,CAAC;gBACd,CAAC,SAAS,EAAE,EAAE,CAAC;gBACf,CAAC,UAAU,EAAE,GAAG,CAAC;gBACjB,CAAC,SAAS,EAAE,CAAC,CAAC;gBACd,CAAC,UAAU,EAAE,EAAE,CAAC;gBAChB,CAAC,WAAW,EAAE,EAAE,CAAC;gBACjB,CAAC,UAAU,EAAE,GAAG,CAAC;gBACjB,CAAC,SAAS,EAAE,EAAE,CAAC;gBACf,CAAC,QAAQ,EAAE,GAAG,CAAC;gBACf,CAAC,OAAO,EAAE,EAAE,CAAC;aACd;YACD,OAAO,EAAE;gBACP,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,qBAAqB;gBAC5B,MAAM,EAAE,MAAM;gBACd,YAAY,EAAE,OAAO;gBACrB,MAAM,EAAE;oBACN,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE;oBAClB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE;oBACnB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE;oBACnB,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE;iBACpB;gBACD,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;aAC3E;SACF,CAAC;QAEF,mBAAc,GAAI;YAChB,SAAS,EAAE,OAAO;YAClB,SAAS,EAAE;gBACT,CAAC,YAAY,EAAE,UAAU,EAAE,gBAAgB,CAAC;gBAC5C,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC;gBACtB,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC;gBACtB,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;gBACnB,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC;gBAC3B,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;gBACnB,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC;aAClB;YACD,UAAU,EAAE;gBACV;oBACE,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;oBACf,IAAI,EAAE,cAAc;oBACpB,OAAO,EAAE;wBACP,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI;qBAC7D;iBACF;aACF;YACD,OAAO,EAAE;gBACP,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,WAAW;gBAClB,SAAS,EAAE,IAAI;aAChB;SACF,CAAC;IAEc,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFA/LU,oBAAoB;oGAApB,oBAAoB;QCPjC,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,8EACE;QAAA,6EAAoD;QACtD,4DAAW;QACb,4DAAM;QAEN,yEACE;QAAA,8EACE;QAAA,6EAA4D;QAC9D,4DAAW;QACb,4DAAM;QAEN,yEACE;QAAA,8EACE;QAAA,8EAAmD;QACrD,4DAAW;QACb,4DAAM;QAEN,0EACE;QAAA,+EACE;QAAA,8EAAsD;QACxD,4DAAW;QACb,4DAAM;QAEN,0EACE;QAAA,+EACE;QAAA,8EAAqD;QACvD,4DAAW;QACb,4DAAM;QAEN,0EACE;QAAA,+EACE;QAAA,8EAAqD;QACvD,4DAAW;QACb,4DAAM;QAEN,0EACE;QAAA,+EACE;QAAA,8EAA0D;QAC5D,4DAAW;QACb,4DAAM;QAEN,0EACE;QAAA,+EACE;QAAA,8EAAqD;QACvD,4DAAW;QACb,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA/CU,0DAAsB;QAAtB,+EAAsB;QAChB,0DAAsB;QAAtB,mFAAsB;QAK5B,0DAA+B;QAA/B,wFAA+B;QACzB,0DAA8B;QAA9B,2FAA8B;QAKpC,0DAAqB;QAArB,8EAAqB;QACf,0DAAqB;QAArB,kFAAqB;QAK3B,0DAAwB;QAAxB,iFAAwB;QAClB,0DAAwB;QAAxB,qFAAwB;QAK9B,0DAAuB;QAAvB,gFAAuB;QACjB,0DAAuB;QAAvB,oFAAuB;QAK7B,0DAAuB;QAAvB,gFAAuB;QACjB,0DAAuB;QAAvB,oFAAuB;QAK7B,0DAAoC;QAApC,6FAAoC;QAC9B,0DAA4B;QAA5B,yFAA4B;QAKlC,0DAAuB;QAAvB,gFAAuB;QACjB,0DAAuB;QAAvB,oFAAuB;;6FDvChC,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACiB;AACO;AACZ;AACH;;AAWjD,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBARnB;YACP,4DAAY;YACZ,qFAAwB;YACxB,kEAAY;YACZ,uEAAqB;SACtB;mIAGU,iBAAiB,mBAFb,4EAAoB,aALjC,4DAAY;QACZ,qFAAwB;QACxB,kEAAY;QACZ,uEAAqB;6FAIZ,iBAAiB;cAT7B,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,qFAAwB;oBACxB,kEAAY;oBACZ,uEAAqB;iBACtB;gBACD,YAAY,EAAE,CAAC,4EAAoB,CAAC;aACrC","file":"google-chart-google-chart-module.js","sourcesContent":["import { __awaiter, __decorate, __param, __metadata } from 'tslib';\nimport { EventEmitter, ɵɵdefineInjectable, ɵɵinject, LOCALE_ID, Injectable, Inject, Optional, Output, ElementRef, Input, Component, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nlet GoogleChartsLoaderService = class GoogleChartsLoaderService {\n    constructor(localeId, googleChartsSettings) {\n        this.googleChartsSettings = googleChartsSettings;\n        this.googleScriptLoadingNotifier = new EventEmitter();\n        this.googleScriptIsLoading = false;\n        this.localeId = localeId;\n        this.loadGoogleChartsScriptPromise = new Promise((resolve, reject) => {\n            if (typeof google !== 'undefined' && google.charts) {\n                resolve();\n            }\n            else if (!this.googleScriptIsLoading) {\n                this.googleScriptIsLoading = true;\n                const script = document.createElement('script');\n                script.type = 'text/javascript';\n                script.src = 'https://www.gstatic.com/charts/loader.js';\n                script.async = true;\n                script.defer = true;\n                script.onload = () => {\n                    this.googleScriptIsLoading = false;\n                    this.googleScriptLoadingNotifier.emit(true);\n                    resolve();\n                };\n                script.onerror = () => {\n                    this.googleScriptIsLoading = false;\n                    this.googleScriptLoadingNotifier.emit(false);\n                    reject();\n                };\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n            else {\n                this.googleScriptLoadingNotifier.subscribe((loaded) => {\n                    if (loaded) {\n                        resolve();\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            }\n        });\n    }\n    load(settings) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.loadGoogleChartsScriptPromise;\n            yield new Promise((resolve) => {\n                if (!settings) {\n                    settings = Object.create(this.googleChartsSettings);\n                }\n                if (!settings) {\n                    settings = {};\n                }\n                if (!settings.language) {\n                    settings.language = this.localeId;\n                }\n                if (!settings.googleChartsVersion) {\n                    settings.googleChartsVersion = '47';\n                }\n                const _settings = settings;\n                _settings.callback = resolve;\n                google.charts.load(settings.googleChartsVersion, _settings);\n            });\n        });\n    }\n};\nGoogleChartsLoaderService.ɵfac = function GoogleChartsLoaderService_Factory(t) { return new (t || GoogleChartsLoaderService)(ɵngcc0.ɵɵinject(LOCALE_ID), ɵngcc0.ɵɵinject('googleChartsSettings', 8)); };\nGoogleChartsLoaderService.ɵprov = ɵɵdefineInjectable({ factory: function GoogleChartsLoaderService_Factory() { return new GoogleChartsLoaderService(ɵɵinject(LOCALE_ID), ɵɵinject(\"googleChartsSettings\", 8)); }, token: GoogleChartsLoaderService, providedIn: \"root\" });\nGoogleChartsLoaderService = __decorate([ __param(0, Inject(LOCALE_ID)),\n    __param(1, Inject('googleChartsSettings')), __param(1, Optional()),\n    __metadata(\"design:paramtypes\", [String, Object])\n], GoogleChartsLoaderService);\n\nclass GoogleChartsDataTable {\n    constructor(opt) {\n        this.opt = opt;\n        this.dataTableChanged = new EventEmitter();\n        if (opt) {\n            this._setDataTable(opt.dataTable, opt.firstRowIsData);\n        }\n    }\n    send() {\n        if (this.query === undefined) {\n            return;\n        }\n        this.query.send((queryResponse) => {\n            this.setDataTable(queryResponse.getDataTable());\n            if (this.opt.queryCallback) {\n                this.opt.queryCallback(queryResponse);\n            }\n        });\n    }\n    init(opt) {\n        if (opt) {\n            this.opt = opt;\n        }\n        if (this.tid !== undefined) {\n            // doesn't work, see https://github.com/google/google-visualization-issues/issues/2381\n            // this.query.abort();\n            window.clearInterval(this.tid);\n            this.tid = undefined;\n        }\n        if (this.opt.dataSourceUrl) {\n            this.query = new google.visualization.Query(this.opt.dataSourceUrl);\n            if (this.opt.query) {\n                this.query.setQuery(this.opt.query);\n            }\n            if (this.opt.timeout !== undefined) {\n                this.query.setTimeout(this.opt.timeout);\n            }\n            if (this.opt.refreshInterval) {\n                // this.query.setRefreshInterval(this.opt.refreshInterval);\n                this.tid = window.setInterval(() => {\n                    this.send();\n                }, this.opt.refreshInterval * 1000);\n            }\n            this.send();\n        }\n        else {\n            this.setDataTable(this.opt.dataTable);\n        }\n    }\n    /**\n     * @returns Underlying google.visualization.DataTable\n     */\n    getDataTable() {\n        return this.dataTable;\n    }\n    setDataTable(dt, firstRowIsData) {\n        if (firstRowIsData === undefined) {\n            firstRowIsData = this.opt.firstRowIsData;\n        }\n        this._setDataTable(dt, firstRowIsData);\n        this.dataTableChanged.emit(this.dataTable);\n    }\n    _setDataTable(dt, firstRowIsData) {\n        if (Array.isArray(dt)) {\n            dt = google.visualization.arrayToDataTable(dt, firstRowIsData);\n        }\n        this.dataTable = dt;\n        this.reformat();\n    }\n    /**\n     * Applies formatters to data columns, if defined\n     */\n    reformat() {\n        const dt = this.dataTable;\n        if (dt === undefined) {\n            return;\n        }\n        if (this.opt.formatters === undefined) {\n            return;\n        }\n        for (const formatterConfig of this.opt.formatters) {\n            let formatter;\n            if (formatterConfig.type === 'PatternFormat') {\n                const fmtOptions = formatterConfig.options;\n                formatter = new google.visualization.PatternFormat(fmtOptions.pattern);\n                formatter.format(dt, formatterConfig.columns, fmtOptions.dstColumnIndex);\n                continue;\n            }\n            const formatterConstructor = google.visualization[formatterConfig.type];\n            const formatterOptions = formatterConfig.options;\n            formatter = new formatterConstructor(formatterOptions);\n            if (formatterConfig.type === 'ColorFormat' && formatterOptions) {\n                const fmtOptions = formatterOptions;\n                for (const range of fmtOptions.ranges) {\n                    if (typeof (range.fromBgColor) !== 'undefined'\n                        && typeof (range.toBgColor) !== 'undefined') {\n                        formatter.addGradientRange(range.from, range.to, range.color, range.fromBgColor, range.toBgColor);\n                    }\n                    else {\n                        formatter.addRange(range.from, range.to, range.color, range.bgcolor);\n                    }\n                }\n            }\n            for (const col of formatterConfig.columns) {\n                formatter.format(dt, col);\n            }\n        }\n    }\n}\nGoogleChartsDataTable.ɵfac = function GoogleChartsDataTable_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nGoogleChartsDataTable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: GoogleChartsDataTable, outputs: { dataTableChanged: \"dataTableChanged\" } });\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartsDataTable.prototype, \"dataTableChanged\", void 0);\n\nclass ChartHTMLTooltip {\n    constructor(el) {\n        this.el = el;\n    }\n    setPosition(x, y) {\n        this.el.nativeElement.style.left = x + ChartHTMLTooltip.PIXELS;\n        this.el.nativeElement.style.top = y + ChartHTMLTooltip.PIXELS;\n    }\n    getDOMElement() {\n        return this.el;\n    }\n}\nChartHTMLTooltip.PIXELS = 'px';\n\nlet GoogleChartComponent = class GoogleChartComponent {\n    constructor(el, loaderService) {\n        this.el = el;\n        this.loaderService = loaderService;\n        this.mouseOverListener = (item) => {\n            const event = this.parseMouseEvent(item);\n            event.tooltip = this.getHTMLTooltip();\n            return event;\n        };\n        this.mouseOutListener = (item) => {\n            const event = this.parseMouseEvent(item);\n            return event;\n        };\n        this.selectListener = () => {\n            const event = {\n                message: 'select',\n                row: null,\n                column: null,\n                selectedRowValues: [],\n                selectedRowFormattedValues: [],\n                columnLabel: ''\n            };\n            const s = this.wrapper.visualization.getSelection();\n            const gs = s[s.length - 1];\n            if (!gs) {\n                event.message = 'deselect';\n                return event;\n            }\n            const selection = gs;\n            if (gs.row != null) {\n                event.row = selection.row;\n                const selectedRowValues = [];\n                const selectedRowFormattedValues = [];\n                const dataTable = this.wrapper.getDataTable();\n                const numberOfColumns = dataTable.getNumberOfColumns();\n                for (let i = 0; i < numberOfColumns; i++) {\n                    selectedRowValues.push(dataTable.getValue(selection.row, i));\n                    selectedRowFormattedValues.push(dataTable.getFormattedValue(selection.row, i));\n                }\n                event.selectedRowValues = selectedRowValues;\n                event.selectedRowFormattedValues = selectedRowFormattedValues;\n            }\n            if (selection.column != null) {\n                event.column = selection.column;\n                event.columnLabel = this.getColumnLabelAtPosition(selection);\n            }\n            if (gs.name) {\n                event.columnLabel = gs.name;\n            }\n            return event;\n        };\n        this.chartSelect = new EventEmitter();\n        this.chartSelectOneTime = new EventEmitter();\n        this.chartReady = new EventEmitter();\n        this.chartReadyOneTime = new EventEmitter();\n        this.chartError = new EventEmitter();\n        this.chartErrorOneTime = new EventEmitter();\n        this.mouseOver = new EventEmitter();\n        this.mouseOverOneTime = new EventEmitter();\n        this.mouseOut = new EventEmitter();\n        this.mouseOutOneTime = new EventEmitter();\n        this.regionClick = new EventEmitter();\n        this.regionClickOneTime = new EventEmitter();\n    }\n    ngOnInit() {\n        this.HTMLel = this.el.nativeElement.querySelector('div');\n        if (Object.isExtensible(this.data)) {\n            this.data.component = this;\n        }\n        this.options = this.data.options;\n        this.init().then(() => {\n            this.draw();\n        });\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.loaderService.load();\n            this.recreateWrapper();\n        });\n    }\n    recreateWrapper() {\n        if (this.wrapper === undefined || this.wrapper.getChartType() !== this.data.chartType) {\n            this.dataTable = new GoogleChartsDataTable(this.data);\n            this.dataTable.dataTableChanged.subscribe((dt) => {\n                this._draw();\n            });\n            // see dataTable in https://developers.google.com/chart/interactive/docs/reference#google.visualization.drawchart\n            let temp = this.data;\n            if (this.data.firstRowIsData) {\n                temp = Object.assign(temp, this.data);\n                temp.dataTable = this.dataTable.getDataTable();\n            }\n            this.wrapper = new google.visualization.ChartWrapper(temp);\n            this.registerChartWrapperEvents();\n            /* Calling draw even without data is the only way to pass the HTMl element\n               when using the chart in a dashboard. Don't do this in all other cases:\n               it breaks formatters with remote data source, hence the conditional. */\n            if (temp.dataTable === undefined && temp.dataSourceUrl === undefined) {\n                try {\n                    this.wrapper.draw(this.HTMLel);\n                }\n                catch (err) { }\n            }\n        }\n    }\n    _draw() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const dt = this.dataTable.getDataTable();\n            if (dt === undefined) {\n                return;\n            }\n            this.convertOptions();\n            this.recreateWrapper();\n            this.wrapper.setOptions(this.options);\n            this.wrapper.setDataTable(dt);\n            this.wrapper.draw(this.HTMLel);\n        });\n    }\n    getDataTable() {\n        return this.dataTable;\n    }\n    draw(value) {\n        if (value === undefined) {\n            value = this.data;\n        }\n        this.options = value.options;\n        this.dataTable.init(value);\n    }\n    getSelectorBySeriesType(seriesType) {\n        const selectors = {\n            bars: 'bar#%s#%r',\n            haxis: 'hAxis#0#label',\n            line: 'point#%s#%r',\n            legend: 'legendentry#%s',\n            area: 'point#%s#%r'\n        };\n        const selector = selectors[seriesType];\n        return selector;\n    }\n    /**\n     * Given a column number, counts how many\n     * columns have rol==\"data\". Those are mapped\n     * one-to-one to the series array. When rol is not defined\n     * a column of type number means a series column.\n     * @param column to inspect\n     */\n    getSeriesByColumn(column) {\n        let series = 0;\n        const dataTable = this.wrapper.getDataTable();\n        for (let i = column - 1; i >= 0; i--) {\n            const role = dataTable.getColumnRole(i);\n            const type = dataTable.getColumnType(i);\n            if (role === 'data' || type === 'number') {\n                series++;\n            }\n        }\n        return series;\n    }\n    getBoundingBoxForItem(item) {\n        let boundingBox = { top: 0, left: 0, width: 0, height: 0 };\n        if (this.cli) {\n            const column = item.column;\n            const series = this.getSeriesByColumn(column);\n            const row = item.row;\n            let seriesType = this.options.seriesType;\n            if (this.options.series && this.options.series[series] && this.options.series[series].type) {\n                seriesType = this.options.series[series].type;\n            }\n            if (seriesType) {\n                let selector = this.getSelectorBySeriesType(seriesType);\n                if (selector) {\n                    selector = selector.replace('%s', series + '').replace('%c', column + '').replace('%r', row + '');\n                    const box = this.cli.getBoundingBox(selector);\n                    if (box) {\n                        boundingBox = box;\n                    }\n                }\n            }\n        }\n        return boundingBox;\n    }\n    getValueAtPosition(position) {\n        if (position.row == null) {\n            return null;\n        }\n        const dataTable = this.wrapper.getDataTable();\n        const value = dataTable.getValue(position.row, position.column);\n        return value;\n    }\n    getColumnTypeAtPosition(position) {\n        const dataTable = this.wrapper.getDataTable();\n        const type = dataTable.getColumnType(position.column) || '';\n        return type;\n    }\n    getColumnLabelAtPosition(position) {\n        const dataTable = this.wrapper.getDataTable();\n        const type = dataTable.getColumnLabel(position.column) || '';\n        return type;\n    }\n    getHTMLTooltip() {\n        const tooltipER = new ElementRef(this.el.nativeElement.querySelector('.google-visualization-tooltip'));\n        return new ChartHTMLTooltip(tooltipER);\n    }\n    parseMouseEvent(item) {\n        const chartType = this.wrapper.getChartType();\n        let eventColumn = item.column;\n        if (eventColumn == null) {\n            switch (chartType) {\n                case 'Timeline':\n                    eventColumn = this.wrapper.getDataTable().getNumberOfColumns() === 3 ? 0 : 1;\n                    break;\n                default:\n                    eventColumn = 0;\n            }\n        }\n        const eventRow = item.row;\n        const myItem = {\n            row: eventRow,\n            column: eventColumn\n        };\n        const event = {\n            position: item,\n            boundingBox: this.getBoundingBoxForItem(myItem),\n            value: this.getValueAtPosition(myItem),\n            columnType: this.getColumnTypeAtPosition(myItem),\n            columnLabel: this.getColumnLabelAtPosition(myItem)\n        };\n        return event;\n    }\n    unregisterEvents() {\n        google.visualization.events.removeAllListeners(this.wrapper.getChart());\n        google.visualization.events.removeAllListeners(this.wrapper);\n    }\n    registerChartEvents() {\n        const chart = this.wrapper.getChart();\n        this.cli = chart.getChartLayoutInterface ? chart.getChartLayoutInterface() : null;\n        if (this.mouseOver.observers.length > 0) {\n            google.visualization.events.addListener(chart, 'onmouseover', (item) => {\n                const event = this.parseMouseEvent(item);\n                event.tooltip = this.getHTMLTooltip();\n                this.mouseOver.emit(event);\n            });\n        }\n        if (this.mouseOverOneTime.observers.length > 0) {\n            google.visualization.events.addOneTimeListener(chart, 'onmouseover', (item) => {\n                const event = this.parseMouseEvent(item);\n                event.tooltip = this.getHTMLTooltip();\n                this.mouseOverOneTime.emit(event);\n            });\n        }\n        if (this.mouseOut.observers.length > 0) {\n            google.visualization.events.addListener(chart, 'onmouseout', (item) => {\n                const event = this.parseMouseEvent(item);\n                this.mouseOut.emit(event);\n            });\n        }\n        if (this.mouseOutOneTime.observers.length > 0) {\n            google.visualization.events.addOneTimeListener(chart, 'onmouseout', (item) => {\n                const event = this.parseMouseEvent(item);\n                this.mouseOutOneTime.emit(event);\n            });\n        }\n        if (this.data.chartType === 'GeoChart') {\n            if (this.regionClick.observers.length > 0) {\n                google.visualization.events.addListener(chart, 'regionClick', (item) => {\n                    this.regionClick.emit(item);\n                });\n            }\n            if (this.regionClickOneTime.observers.length > 0) {\n                google.visualization.events.addOneTimeListener(chart, 'regionClick', (item) => {\n                    this.regionClick.emit(item);\n                });\n            }\n        }\n    }\n    registerChartWrapperEvents() {\n        google.visualization.events.addListener(this.wrapper, 'ready', () => {\n            this.chartReady.emit({ message: 'Chart ready' });\n        });\n        google.visualization.events.addOneTimeListener(this.wrapper, 'ready', () => {\n            this.chartReadyOneTime.emit({ message: 'Chart ready (one time)' });\n            this.registerChartEvents();\n        });\n        google.visualization.events.addListener(this.wrapper, 'error', (error) => {\n            this.chartError.emit(error);\n        });\n        google.visualization.events.addOneTimeListener(this.wrapper, 'error', (error) => {\n            this.chartErrorOneTime.emit(error);\n        });\n        this.addListener(this.wrapper, 'select', this.selectListener, this.chartSelect);\n        this.addOneTimeListener(this.wrapper, 'select', this.selectListener, this.chartSelectOneTime);\n    }\n    addListener(source, eventType, listenerFn, evEmitter) {\n        google.visualization.events.addListener(source, eventType, () => {\n            evEmitter.emit(listenerFn());\n        });\n    }\n    addOneTimeListener(source, eventType, listenerFn, evEmitter) {\n        google.visualization.events.addOneTimeListener(source, eventType, () => {\n            evEmitter.emit(listenerFn());\n        });\n    }\n    convertOptions() {\n        try {\n            this.options = google.charts[this.data.chartType].convertOptions(this.options);\n        }\n        catch (error) {\n            return;\n        }\n    }\n};\nGoogleChartComponent.ɵfac = function GoogleChartComponent_Factory(t) { return new (t || GoogleChartComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleChartsLoaderService)); };\nGoogleChartComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GoogleChartComponent, selectors: [[\"google-chart\"]], inputs: { data: \"data\" }, outputs: { chartSelect: \"chartSelect\", chartSelectOneTime: \"chartSelectOneTime\", chartReady: \"chartReady\", chartReadyOneTime: \"chartReadyOneTime\", chartError: \"chartError\", chartErrorOneTime: \"chartErrorOneTime\", mouseOver: \"mouseOver\", mouseOverOneTime: \"mouseOverOneTime\", mouseOut: \"mouseOut\", mouseOutOneTime: \"mouseOutOneTime\", regionClick: \"regionClick\", regionClickOneTime: \"regionClickOneTime\" }, decls: 1, vars: 0, template: function GoogleChartComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\");\n    } }, encapsulation: 2 });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GoogleChartComponent.prototype, \"data\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"chartReady\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"chartReadyOneTime\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"chartError\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"chartErrorOneTime\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"chartSelect\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"chartSelectOneTime\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"mouseOverOneTime\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"mouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"mouseOutOneTime\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"regionClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"regionClickOneTime\", void 0);\nGoogleChartComponent = __decorate([ __metadata(\"design:paramtypes\", [ElementRef,\n        GoogleChartsLoaderService])\n], GoogleChartComponent);\n\nlet GoogleChartsDashboardComponent = class GoogleChartsDashboardComponent {\n    constructor(el, loaderService) {\n        this.el = el;\n        this.loaderService = loaderService;\n        this.el = el;\n        this.loaderService = loaderService;\n    }\n    ngOnInit() {\n        this.data.component = this;\n        this.init().then(() => {\n            if (!this.dataTable) {\n                this.dataTable = new GoogleChartsDataTable(this.data);\n                this.dataTable.dataTableChanged.subscribe((dt) => {\n                    this._draw();\n                });\n            }\n            this.draw();\n        });\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.loaderService.load({ packages: ['controls'] });\n            this.dashboard = new google.visualization.Dashboard(this.el.nativeElement.querySelector('div'));\n            for (const b of this.data.bind) {\n                let controls = b[0];\n                let charts = b[1];\n                if (!(controls instanceof Array)) {\n                    controls = [controls];\n                }\n                if (!(charts instanceof Array)) {\n                    charts = [charts];\n                }\n                for (const c of controls) {\n                    yield c.component.ensureInit();\n                }\n                for (const c of charts) {\n                    yield c.component.init();\n                    const data = c.component.data;\n                    if (data.dataTable !== undefined || data.dataSourceUrl !== undefined) {\n                        throw Error('dataTable and dataSourceUrl cannot be specified when ' +\n                            'chart is drawn in a Dashboard');\n                    }\n                }\n                this.dashboard.bind(controls.map(x => x.component.wrapper), charts.map(x => x.component.wrapper));\n            }\n        });\n    }\n    draw(value) {\n        this.dataTable.init(value);\n    }\n    _draw() {\n        this.dashboard.draw(this.dataTable.getDataTable());\n    }\n};\nGoogleChartsDashboardComponent.ɵfac = function GoogleChartsDashboardComponent_Factory(t) { return new (t || GoogleChartsDashboardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleChartsLoaderService)); };\nGoogleChartsDashboardComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GoogleChartsDashboardComponent, selectors: [[\"google-charts-dashboard\"]], inputs: { data: \"data\" }, decls: 1, vars: 0, template: function GoogleChartsDashboardComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\");\n    } }, encapsulation: 2 });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GoogleChartsDashboardComponent.prototype, \"data\", void 0);\nGoogleChartsDashboardComponent = __decorate([ __metadata(\"design:paramtypes\", [ElementRef,\n        GoogleChartsLoaderService])\n], GoogleChartsDashboardComponent);\n\nlet GoogleChartsControlComponent = class GoogleChartsControlComponent {\n    constructor(el, loaderService) {\n        this.el = el;\n        this.loaderService = loaderService;\n        this.el = el;\n        this.loaderService = loaderService;\n    }\n    ngOnInit() {\n        this.data.component = this;\n    }\n    ensureInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.wrapper) {\n                return;\n            }\n            yield this.loaderService.load({ packages: ['controls'] });\n            let opt;\n            opt = Object.create(this.data);\n            opt.containerId = this.el.nativeElement.querySelector('div');\n            this.wrapper = new google.visualization.ControlWrapper(opt);\n        });\n    }\n};\nGoogleChartsControlComponent.ɵfac = function GoogleChartsControlComponent_Factory(t) { return new (t || GoogleChartsControlComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleChartsLoaderService)); };\nGoogleChartsControlComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: GoogleChartsControlComponent, selectors: [[\"google-charts-control\"]], inputs: { data: \"data\" }, decls: 1, vars: 0, template: function GoogleChartsControlComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\");\n    } }, encapsulation: 2 });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GoogleChartsControlComponent.prototype, \"data\", void 0);\nGoogleChartsControlComponent = __decorate([ __metadata(\"design:paramtypes\", [ElementRef,\n        GoogleChartsLoaderService])\n], GoogleChartsControlComponent);\n\nlet Ng2GoogleChartsModule = class Ng2GoogleChartsModule {\n};\nNg2GoogleChartsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: Ng2GoogleChartsModule });\nNg2GoogleChartsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function Ng2GoogleChartsModule_Factory(t) { return new (t || Ng2GoogleChartsModule)(); }, providers: [\n        GoogleChartsLoaderService\n    ] });\n\nfunction isComponent(chart) {\n    return chart.wrapper !== undefined;\n}\nlet GoogleChartEditor = class GoogleChartEditor {\n    constructor(loaderService) {\n        this.loaderService = loaderService;\n    }\n    createEditor() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.chartEditor !== undefined) {\n                return;\n            }\n            yield this.loaderService.load({ packages: ['charteditor'] });\n            this.chartEditor = new google.visualization.ChartEditor();\n            google.visualization.events.addListener(this.chartEditor, 'ok', () => {\n                const wrapper = this.chartEditor.getChartWrapper();\n                this.comp.wrapper = wrapper;\n                this.comp.data.chartType = wrapper.getChartType();\n                if (this.comp.data.options !== undefined || Object.isExtensible(this.comp.data)) {\n                    this.comp.data.options = wrapper.getOptions();\n                }\n                this.comp.wrapper.draw();\n            });\n        });\n    }\n    openDialog(chart, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.createEditor();\n            return new Promise((resolve, reject) => {\n                this.comp = isComponent(chart) ? chart : chart.component;\n                this.chartEditor.openDialog(this.comp.wrapper, options);\n                google.visualization.events.addListener(this.chartEditor, 'ok', () => {\n                    resolve(this.comp.wrapper);\n                });\n                google.visualization.events.addListener(this.chartEditor, 'cancel', () => {\n                    reject();\n                });\n            });\n        });\n    }\n};\nGoogleChartEditor.ɵfac = function GoogleChartEditor_Factory(t) { return new (t || GoogleChartEditor)(ɵngcc0.ɵɵinject(GoogleChartsLoaderService)); };\nGoogleChartEditor.ɵprov = ɵɵdefineInjectable({ factory: function GoogleChartEditor_Factory() { return new GoogleChartEditor(ɵɵinject(GoogleChartsLoaderService)); }, token: GoogleChartEditor, providedIn: \"root\" });\nGoogleChartEditor = __decorate([ __metadata(\"design:paramtypes\", [GoogleChartsLoaderService])\n], GoogleChartEditor);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GoogleChartsLoaderService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: ['googleChartsSettings']\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GoogleChartComponent, [{\n        type: Component,\n        args: [{\n                selector: 'google-chart',\n                template: '<div></div>'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: GoogleChartsLoaderService }]; }, { chartSelect: [{\n            type: Output\n        }], chartSelectOneTime: [{\n            type: Output\n        }], chartReady: [{\n            type: Output\n        }], chartReadyOneTime: [{\n            type: Output\n        }], chartError: [{\n            type: Output\n        }], chartErrorOneTime: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseOverOneTime: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], mouseOutOneTime: [{\n            type: Output\n        }], regionClick: [{\n            type: Output\n        }], regionClickOneTime: [{\n            type: Output\n        }], data: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GoogleChartsDashboardComponent, [{\n        type: Component,\n        args: [{\n                selector: 'google-charts-dashboard',\n                template: '<div></div>'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: GoogleChartsLoaderService }]; }, { data: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GoogleChartsControlComponent, [{\n        type: Component,\n        args: [{\n                selector: 'google-charts-control',\n                template: '<div></div>'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: GoogleChartsLoaderService }]; }, { data: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2GoogleChartsModule, { declarations: [GoogleChartComponent, GoogleChartsDashboardComponent, GoogleChartsControlComponent], exports: [GoogleChartComponent, GoogleChartsDashboardComponent, GoogleChartsControlComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Ng2GoogleChartsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    GoogleChartComponent,\n                    GoogleChartsDashboardComponent,\n                    GoogleChartsControlComponent,\n                ],\n                providers: [\n                    GoogleChartsLoaderService\n                ],\n                exports: [\n                    GoogleChartComponent,\n                    GoogleChartsDashboardComponent,\n                    GoogleChartsControlComponent,\n                ]\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GoogleChartEditor, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: GoogleChartsLoaderService }]; }, null); })();\n\n/*\n * Public API Surface of ng2-google-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChartHTMLTooltip, GoogleChartComponent, GoogleChartEditor, GoogleChartsControlComponent, GoogleChartsDashboardComponent, GoogleChartsLoaderService, Ng2GoogleChartsModule };\n\n//# sourceMappingURL=ng2-google-charts.js.map","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {GoogleChartComponent} from './google-chart.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GoogleChartComponent,\r\n    data: {\r\n      title: 'Google Charts',\r\n      icon: 'icon-bar-chart-alt',\r\n      caption: 'lorem ipsum dolor sit amet, consectetur adipisicing elit - google chart',\r\n      status: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class GoogleChartRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-google-chart',\r\n  templateUrl: './google-chart.component.html',\r\n  styleUrls: ['./google-chart.component.scss']\r\n})\r\nexport class GoogleChartComponent implements OnInit {\r\n  areaChartData =  {\r\n    chartType: 'AreaChart',\r\n    dataTable: [\r\n      ['Year', 'Sales', 'Expenses'],\r\n      ['2013', 1000, 400],\r\n      ['2014', 1170, 460],\r\n      ['2015', 660, 1120],\r\n      ['2016', 1030, 540]\r\n    ],\r\n    options: {\r\n      vAxis: { minValue: 0 },\r\n      colors: ['#01C0C8', '#FB9678'],\r\n      height: 300\r\n    },\r\n  };\r\n\r\n  stackingAreaChartData =  {\r\n    chartType: 'AreaChart',\r\n    dataTable: [\r\n      ['Year', 'Sales', 'Expenses'],\r\n      ['2013', 1000, 400],\r\n      ['2014', 1170, 460],\r\n      ['2015', 660, 1120],\r\n      ['2016', 1030, 540]\r\n    ],\r\n    options: {\r\n      isStacked: true,\r\n      height: 300,\r\n      legend: { position: 'top', maxLines: 3 },\r\n      vAxis: { minValue: 0 },\r\n      colors: ['#2ecc71', '#5faee3']\r\n    },\r\n  };\r\n\r\n  barChartData =  {\r\n    chartType: 'BarChart',\r\n    dataTable: [\r\n      ['City', '2010 Population', '2000 Population'],\r\n      ['New York City, NY', 8175000, 8008000],\r\n      ['Los Angeles, CA', 3792000, 3694000],\r\n      ['Chicago, IL', 2695000, 2896000],\r\n      ['Houston, TX', 2099000, 1953000],\r\n      ['Philadelphia, PA', 1526000, 1517000]\r\n    ],\r\n    options: {\r\n      height: 300,\r\n      title: 'Population of Largest U.S. Cities',\r\n      chartArea: { width: '50%' },\r\n      isStacked: true,\r\n      hAxis: {\r\n        title: 'Total Population',\r\n        minValue: 0,\r\n      },\r\n      vAxis: {\r\n        title: 'City'\r\n      },\r\n      colors: ['#2ecc71', '#5faee3']\r\n    },\r\n  };\r\n\r\n  bubbleChartData =  {\r\n    chartType: 'BubbleChart',\r\n    dataTable: [\r\n      ['ID', 'Life Expectancy', 'Fertility Rate', 'Region', 'Population'],\r\n      ['CAN', 80.66, 1.67, 'North America', 33739900],\r\n      ['DEU', 79.84, 1.36, 'Europe', 81902307],\r\n      ['DNK', 78.6, 1.84, 'Europe', 5523095],\r\n      ['EGY', 72.73, 2.78, 'Middle East', 79716203],\r\n      ['GBR', 80.05, 2, 'Europe', 61801570],\r\n      ['IRN', 72.49, 1.7, 'Middle East', 73137148],\r\n      ['IRQ', 68.09, 4.77, 'Middle East', 31090763],\r\n      ['ISR', 81.55, 2.96, 'Middle East', 7485600],\r\n      ['RUS', 68.6, 1.54, 'Europe', 141850000],\r\n      ['USA', 78.09, 2.05, 'North America', 307007000]\r\n    ],\r\n    options: {\r\n      height: 300,\r\n      title: 'Correlation between life expectancy, fertility rate ' +\r\n      'and population of some world countries (2010)',\r\n      hAxis: { title: 'Life Expectancy' },\r\n      vAxis: { title: 'Fertility Rate' },\r\n      bubble: { textStyle: { fontSize: 11 } },\r\n      colors: ['#2ecc71', '#5faee3', '#DD4B39']\r\n    },\r\n  };\r\n\r\n  comboChartData =  {\r\n    chartType: 'ComboChart',\r\n    dataTable: [\r\n      ['Month', 'Bolivia', 'Ecuador', 'Madagascar', 'Papua New Guinea', 'Rwanda', 'Average'],\r\n      ['2004/05', 165, 938, 522, 998, 450, 614.6],\r\n      ['2005/06', 135, 1120, 599, 1268, 288, 682],\r\n      ['2006/07', 157, 1167, 587, 807, 397, 623],\r\n      ['2007/08', 139, 1110, 615, 968, 215, 609.4],\r\n      ['2008/09', 136, 691, 629, 1026, 366, 569.6]\r\n    ],\r\n    options: {\r\n      height: 300,\r\n      title: 'Monthly Coffee Production by Country',\r\n      vAxis: { title: 'Cups' },\r\n      hAxis: { title: 'Month' },\r\n      seriesType: 'bars',\r\n      series: { 5: { type: 'line' } },\r\n      colors: ['#2ecc71', '#01C0C8', '#FB9678', '#5faee3', '#f4d03f', '#e74c3c']\r\n    },\r\n  };\r\n\r\n  donutChartData =  {\r\n    chartType: 'PieChart',\r\n    dataTable: [\r\n      ['Task', 'Hours per Day'],\r\n      ['Work', 11],\r\n      ['Eat', 2],\r\n      ['Commute', 2],\r\n      ['Watch TV', 2],\r\n      ['Sleep', 7]\r\n    ],\r\n    options: {\r\n      height: 300,\r\n      title: 'My Daily Activities',\r\n      pieHole: 0.4,\r\n      colors: ['#2ecc71', '#01C0C8', '#FB9678', '#5faee3', '#f4d03f']\r\n    },\r\n  };\r\n\r\n  exploadingChartData =  {\r\n    chartType: 'PieChart',\r\n    dataTable: [\r\n      ['Language', 'Speakers (in millions)'],\r\n      ['Assamese', 13],\r\n      ['Bengali', 83],\r\n      ['Bodo', 1.4],\r\n      ['Dogri', 2.3],\r\n      ['Gujarati', 46],\r\n      ['Hindi', 300],\r\n      ['Kannada', 38],\r\n      ['Kashmiri', 5.5],\r\n      ['Konkani', 5],\r\n      ['Maithili', 20],\r\n      ['Malayalam', 33],\r\n      ['Manipuri', 1.5],\r\n      ['Marathi', 72],\r\n      ['Nepali', 2.9],\r\n      ['Oriya', 33]\r\n    ],\r\n    options: {\r\n      height: 300,\r\n      title: 'Indian Language Use',\r\n      legend: 'none',\r\n      pieSliceText: 'label',\r\n      slices: {\r\n        4: { offset: 0.2 },\r\n        12: { offset: 0.3 },\r\n        14: { offset: 0.4 },\r\n        15: { offset: 0.5 },\r\n      },\r\n      colors: ['#2ecc71', '#01C0C8', '#FB9678', '#5faee3', '#f4d03f', '#e74c3c']\r\n    },\r\n  };\r\n\r\n  tableChartData =  {\r\n    chartType: 'Table',\r\n    dataTable: [\r\n      ['Department', 'Revenues', 'Another column'],\r\n      ['Shoes', 10700, -100],\r\n      ['Sports', -15400, 25],\r\n      ['Toys', 12500, 40],\r\n      ['Electronics', -2100, 889],\r\n      ['Food', 22600, 78],\r\n      ['Art', 1100, 42]\r\n    ],\r\n    formatters: [\r\n      {\r\n        columns: [1, 2],\r\n        type: 'NumberFormat',\r\n        options: {\r\n          prefix: '&euro;', negativeColor: 'red', negativeParens: true\r\n        }\r\n      }\r\n    ],\r\n    options: {\r\n      height: 300,\r\n      title: 'Countries',\r\n      allowHtml: true\r\n    }\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"page-body\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-6\">\r\n      <app-card [title]=\"'Area Chart'\" [headerContent]=\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\">\r\n        <google-chart [data]=\"areaChartData\"></google-chart>\r\n      </app-card>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <app-card [title]=\"'STACKING AREA CHART'\" [headerContent]=\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\">\r\n        <google-chart [data]=\"stackingAreaChartData\"></google-chart>\r\n      </app-card>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <app-card [title]=\"'BAR CHART'\" [headerContent]=\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\">\r\n        <google-chart [data]=\"barChartData\"></google-chart>\r\n      </app-card>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <app-card [title]=\"'BUBBLE CHART'\" [headerContent]=\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\">\r\n        <google-chart [data]=\"bubbleChartData\"></google-chart>\r\n      </app-card>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <app-card [title]=\"'COMBO CHART'\" [headerContent]=\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\">\r\n        <google-chart [data]=\"comboChartData\"></google-chart>\r\n      </app-card>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <app-card [title]=\"'DONUT CHART'\" [headerContent]=\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\">\r\n        <google-chart [data]=\"donutChartData\"></google-chart>\r\n      </app-card>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <app-card [title]=\"'EXPLOADING A SLICE CHART'\" [headerContent]=\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\">\r\n        <google-chart [data]=\"exploadingChartData\"></google-chart>\r\n      </app-card>\r\n    </div>\r\n\r\n    <div class=\"col-sm-6\">\r\n      <app-card [title]=\"'Table Chart'\" [headerContent]=\"'Lorem ipsum dolor sit amet, consectetur adipisicing elit'\" [blockClass]=\"'text-center'\">\r\n        <google-chart [data]=\"tableChartData\"></google-chart>\r\n      </app-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GoogleChartComponent } from './google-chart.component';\r\nimport {GoogleChartRoutingModule} from './google-chart-routing.module';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {Ng2GoogleChartsModule} from 'ng2-google-charts';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    GoogleChartRoutingModule,\r\n    SharedModule,\r\n    Ng2GoogleChartsModule\r\n  ],\r\n  declarations: [GoogleChartComponent]\r\n})\r\nexport class GoogleChartModule { }\r\n"],"sourceRoot":"webpack:///"}